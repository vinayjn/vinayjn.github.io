<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="https://vinayjain.me/feed.xml" rel="self" type="application/atom+xml" /><link href="https://vinayjain.me/" rel="alternate" type="text/html" /><updated>2020-12-23T11:21:15+05:30</updated><id>https://vinayjain.me/feed.xml</id><title type="html">Vinay Jain</title><subtitle>Developer / Tinkerer</subtitle><entry><title type="html">Remote Configurations &amp;amp; AB Tests</title><link href="https://vinayjain.me/posts/feature-toggle-service" rel="alternate" type="text/html" title="Remote Configurations &amp;amp; AB Tests" /><published>2020-12-22T06:39:25+05:30</published><updated>2020-12-22T06:39:25+05:30</updated><id>https://vinayjain.me/posts/feature-toggle-service</id><content type="html" xml:base="https://vinayjain.me/posts/feature-toggle-service">&lt;p&gt;Recently, during a video conference call I was asked to tap on a button not available on the app I was using. Then I was asked to update the app from the App store and I confirmed that I had the latest version available. I told them that it’s probably an AB test. Turns out, it was an alien term for most of the attendees from a non-tech background. Appreciating their curiosity I took the next few minutes to explain them what it meant. Being constrained with the time and audience I didn’t explain it completely and got away by saying that it needs a separate discussion to get into the details. Probably, a blogpost is a good idea to reach a bigger audience, I’ll try to keep it as non-tech as possible.&lt;/p&gt;

&lt;h3 id=&quot;what-is-an-ab-test-anyway&quot;&gt;What is an AB test anyway?&lt;/h3&gt;

&lt;p&gt;Imagine you and I started an icecream parlour. Unfortunately, our business is not doing well and we decide to add a new Chocolate flavor in our offerings. You like the Belgian Chocolate icecream and believe that the customers will love it too. Me on the other hand thinks that the American Chocolate will sell more. Because we are low on funds we don’t want to place a bulk order for any of these chocolates and end up making a loss. Instead, we decide to buy small amounts of both &lt;strong&gt;A&lt;/strong&gt;merican and &lt;strong&gt;B&lt;/strong&gt;elgian chocolates to run an experiment of selling both icecreams for 7-days. Based on the results of this experiment we’ll get to know the chocolate flavor our customers prefer and eventually we’ll place bulk order for that one.&lt;/p&gt;

&lt;p&gt;This experiment which helps us to determine the preferred chocolate flavor of our customers is an example of AB tests.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;AB testing is a process of simultaneouly experimenting two variants of a product against a metric that defines success to determine which variation to use in the real-world.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Similar conflicts arise in the software development process, let me walk you through a normal feature development process in a product company and how it reaches you from the App Store.&lt;/p&gt;

&lt;h3 id=&quot;feature-development&quot;&gt;Feature Development&lt;/h3&gt;

&lt;p&gt;Product managers thinks of building a new feature or an improvement to an existing feature; goes to the designer gets a prototype ready shows it to the client and the client proposes a different solution or completely rejects it saying it won’t work. This is a classic problem of &lt;strong&gt;HIPPO&lt;/strong&gt;(HIghest Paid Persons Opinion) and the only way to avoid this is with AB tests, because data speaks for itself. This data can only be collected when the variation for the existing feature is developed, manager gets approval to build the proposed feature and gathers a team of rockstar developers to work on it. The developers work on the new feature keping the AB testability in mind and make it ready to deploy on production.&lt;/p&gt;

&lt;h3 id=&quot;feature-deployment&quot;&gt;Feature Deployment&lt;/h3&gt;

&lt;p&gt;Releasing the feature can be as simple as clicking a button but if your product is an app distributed from an app store then you can also use &lt;strong&gt;Phase Release&lt;/strong&gt; utility provided by most of the stores. With this utility you can set what percent of users should get this update, if you set a value of “5” then app store will release it to only 5 in every 100 users of the app. You can treat it as a safety net for your app, if anything blows up in production it will affect only 5% users the rest of the 95% won’t even realise. Please note that this only works for users who have auto-update enabled, if any user goes and downloads the app from the store directly there’s no one stopping them to get the latest app.&lt;/p&gt;

&lt;p&gt;Phased releases are not limited to apps, the technical term for it is Canary Release and it can be used for anything that can be released.&lt;/p&gt;

&lt;p&gt;Now that the app with the new “Feature” has reached our users, how does it decide which variant to show?&lt;/p&gt;

&lt;h4 id=&quot;we-finally-ab-test&quot;&gt;We finally AB test!&lt;/h4&gt;

&lt;p&gt;A software is dumb and does whatever its instructed to do. The developers build the feature in an AB testable way so they put the necessary code to toggle this feature for certain users matching a criteria. A match is validated usually with the help of a service like Firebase Remote Config or an in-house Feature Configuration service. An AB testable code can be something like this:&lt;/p&gt;

&lt;pre class=&quot;splash&quot;&gt;&lt;code&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; isNewFeatureEnabled = &lt;span class=&quot;type&quot;&gt;ConfigurationService&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;shared&lt;/span&gt;.&lt;span class=&quot;call&quot;&gt;getConfig&lt;/span&gt;(for: &lt;span class=&quot;string&quot;&gt;&quot;NEW_FEATURE_ENABLED&quot;&lt;/span&gt;)

&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; isNewFeatureEnabled {
    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;call&quot;&gt;performNewFeatureActions&lt;/span&gt;()
} &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {
    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;call&quot;&gt;performOldFeatureActions&lt;/span&gt;()
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ConfigurationService&lt;/code&gt; relies on the analytics data(more on this below) you share with the app. Behind the scenes, this service pre-computes a list of users who satisfy the match criteria and the code above just checks the presence of this user on that list.&lt;/p&gt;

&lt;h4 id=&quot;analytics-data&quot;&gt;Analytics Data&lt;/h4&gt;

&lt;p&gt;All the apps that we use track our activity in some way. In addition to the device specific details like operating system, device type, geo-location; information is also shared in the form of events like opening a screen, tapping a button, adding money to the digital wallet, liking a picture, opening and watching a video, sending a message etc. Simply put, whatever you do inside an app the developer knows because you quickly “Agree” the Terms and Conditions of using the app. Again, there are services available in the market which helps you track the user activity; Mixpanel, CleverTap, Firebase, Google Analytics are the one’s that I have used.&lt;/p&gt;

&lt;p&gt;With the help of this data the product team can create user buckets to be consumed by the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ConfigurationService&lt;/code&gt;. These buckets can include users in particular geography, total amount spent, users who liked a picture or watched a particular video etcs. This way your own behavior on the app determines what you see on the app and offcourse, it can be different for two different users.&lt;/p&gt;

&lt;h3 id=&quot;measuring-the-feature-performance&quot;&gt;Measuring the Feature Performance&lt;/h3&gt;

&lt;p&gt;The analytics data that has been shared with the app contains information about the newly added “Feature” also. Looking at this data, product managers and data analysts/scientists perform some magical calculations and judge the behavior of the user with respect to this feature and check the results against the metric that defines success. If the results are good and everything works as expected the feature can be released to more users.&lt;/p&gt;

&lt;p&gt;If the new change is not performing upto the expectations, managers look at user drop-points and think of a strategy to avoid the drop-point or make it easy to use.&lt;/p&gt;

&lt;p&gt;Once the AB test is complete and the changes are permanent, it is the developers responsibility to cleanup the toggles in the next releases. It should be removed from the code and the configuration system to improve the maintainability of the codebase. Some services like LaunchDarkly periodically reminds you to review the toggles and cleanup that are not being used.&lt;/p&gt;

&lt;p&gt;It is worth mentioning that AB testing is not just for measuring performance of new features(the icecreams example), it can be used to measure the performance of a change(like UX improvements) compared to the existing implementation. Infact, in the real-world AB testing is used more for the latter case.&lt;/p&gt;

&lt;h4 id=&quot;alternatives-for-b2b-products&quot;&gt;Alternatives for B2B products?&lt;/h4&gt;

&lt;p&gt;AB testing makes a lot of sense for B2C products where the business can exploit the user provided data to make decisions. But with B2B products where enough data points cannot be provided, using an AB test doesn’t help much and in that case we rely on the feedback of super users and additional alpha/beta users.&lt;/p&gt;

&lt;p&gt;Though, I explained everything here in the context of feature development, a ConfigurationService and phased releases are not limited to this only. Product teams use it for use-cases like reducing risk, load testing, easy rollbacks etc. These are amazing tools and using them properly can help in improving the user experience and also in growing the business. Based on your business use-cases you can identify how AB testing can help you with the growth of your company.&lt;/p&gt;

&lt;p&gt;I would highly appreciate your feedback and questions on this. Please let me know in the comments!&lt;/p&gt;

&lt;h3 id=&quot;references&quot;&gt;References&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://exp-platform.com/hippo/&quot;&gt;HIPPO&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://martinfowler.com/bliki/CanaryRelease.html&quot;&gt;Canary Release - Martin Fowler&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://firebase.google.com/docs/remote-config&quot;&gt;Firebase Remote Config&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://clevertap.com/&quot;&gt;CleverTap&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://mixpanel.com/&quot;&gt;Mixpanel&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://launchdarkly.com/blog/launched-ready-to-remove-notifications-in-slack/&quot;&gt;LaunchDarkly&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="tech" /><summary type="html">Recently, during a video conference call I was asked to tap on a button not available on the app I was using. Then I was asked to update the app from the App store and I confirmed that I had the latest version available. I told them that it’s probably an AB test. Turns out, it was an alien term for most of the attendees from a non-tech background. Appreciating their curiosity I took the next few minutes to explain them what it meant. Being constrained with the time and audience I didn’t explain it completely and got away by saying that it needs a separate discussion to get into the details. Probably, a blogpost is a good idea to reach a bigger audience, I’ll try to keep it as non-tech as possible.</summary></entry><entry><title type="html">Thoughts on Google Photos</title><link href="https://vinayjain.me/posts/google-photos" rel="alternate" type="text/html" title="Thoughts on Google Photos" /><published>2020-11-18T06:39:25+05:30</published><updated>2020-11-18T06:39:25+05:30</updated><id>https://vinayjain.me/posts/google-photos</id><content type="html" xml:base="https://vinayjain.me/posts/google-photos">&lt;p&gt;Google Photos was launched in May 2015 with a motive to retire Google+ Photos and with a promise to give unlimited storage for photos upto 16 Megapixel and videos upto a 1080p resolution. I take photos from my iPhone, it limits the photo quality to 12MP which means, full resolution photos from my phone will get free cloud storage forever. And like all other Google products, they did mention that they’ll be using my photos to improve their AI for face-recognition and search. As long as my ugly pictures weren’t made public, I am fine with that. Along with me, by May 2017, half a billion users joined the bandwagon and got addicted. With their powerful AI, Google Photos easily solved a great problem of arranging, filtering and searching the photos and now its impossible to get away from it.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Storing the pictures was never a problem. It was to make sense of them.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Google recently announced an update in their storage policy stating &lt;em&gt;Starting June 1, 2021, any new photos and videos you upload will count toward the free 15 GB of storage that comes with every Google Account or the additional storage you’ve purchased as a Google One member.&lt;/em&gt; And with this our beloved service is no longer free. Like everyone else, I was disappointed. Not because I am a non-paying user and have to pay now but because they initially promised it to be free and are now asking me to pay for it. This seems like betrayal. A comment from a friend sums it up&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I was already paying for it. But now I am less pissed at Apple not giving free storage for photos.
&lt;cite&gt;- Jagrat Desai&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Being a software engineer, I respect the work of other developers and pay for many services and subscriptions on the internet. But will I pay for the Google One subscription? First, let’s see if a service like this is worth paying for!&lt;/p&gt;

&lt;p&gt;On their blog, Google also mentioned that &lt;em&gt;more than 4 trillion photos are stored in Google Photos, and every week 28 billion new photos and videos are uploaded&lt;/em&gt;.&lt;/p&gt;

&lt;div class=&quot;image-box&quot;&gt;
&lt;img class=&quot;image-box-item&quot; width=&quot;321px&quot; height=&quot;262px&quot; src=&quot;/images/apple-iphone-se-pic.svg&quot; /&gt;
&lt;img class=&quot;image-box-item&quot; width=&quot;321px&quot; height=&quot;262px&quot; src=&quot;/images/apple-iphone-se-pic-live.svg&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;A 12MP photo clicked on my phone takes up 2MB of storage space and I have Live Photos enabled which takes upto 7MB. Nowadays, almost everyone has a smartphone with a great camera which captures a high resolution image. Let’s assume, on an average every new photo uploaded on Google Photos from today will take 3MB of storage space.&lt;/p&gt;

&lt;p&gt;The estimated storage needed for 28 billion new photos uploaded every week will be:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Weekly&lt;/th&gt;
      &lt;th&gt;Monthly(4 weeks)&lt;/th&gt;
      &lt;th&gt;Yearly(52 weeks)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;28 billion * 3MB ≅ 84,000TB&lt;/td&gt;
      &lt;td&gt;4 * 84,000TB ≅ 336,000TB&lt;/td&gt;
      &lt;td&gt;52 * 84,000TB ≅ 4,368,000TB&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;And lets assume on an average each of the previous 4 trillion photos takes 1MB of storage space on the disk. The total disk space used is approximately&lt;/p&gt;

&lt;div class=&quot;align-center&quot;&gt;
&lt;h4&gt;4 trillion * 1MB ≅ 4,000,000TB&lt;/h4&gt;
&lt;/div&gt;

&lt;p&gt;And considering an organisation like Google where uptime and availability of resources is promised, this data must be replicated at least once so just double the calculations. This is a massive amount of storage space and we haven’t considered videos yet. Imagine running a marathan, 42kms, yes thats the distance you’ll have to run if you put &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;4,000,000&lt;/code&gt; HDDs with 1TB capacity in a row. Extreme computing power is needed just to keep a service running at this scale and storage is probably one of the cheapest part of it, don’t get me started on the cost of high performance CPUs and GPUs driving that amazing AI.&lt;/p&gt;

&lt;h3 id=&quot;now-that-we-know-what-google-photos-is-should-you-and-i-pay-for-it&quot;&gt;Now that we know what Google Photos is, should you and I pay for it?&lt;/h3&gt;

&lt;p&gt;With all the calculations above, its clear that a service like this isn’t cheap and if a giant like Google had to change their pricing strategy then I don’t think any other company can afford to give it away for free. With similar examples like YouTube, Medium, Amazon it is evident that the free services are going away or getting worse in experience. Photos are important for a lot of people and for them it totally makes sense to pay for it. I am just a casual photographer but I do have about 150GB photos+videos stored there. Even if I think about migrating to any other service, the effort of downloading and reuploading this data isn’t worth it. However, the fact that Google does all the magic on their servers by using my data concerns me. I let them use my data because in turn they let me use their storage space. &lt;em&gt;Seems like a valid transaction&lt;/em&gt;. But now they are asking for an additional input from my side and the transaction &lt;em&gt;doesn’t seem valid anymore&lt;/em&gt;. If I pay they’ll offer me additional tech support, I don’t need their tech support I know tech and I figure out most of the issues on my own, so no thanks! Unless they have additional things to offer me and validate the transaction I would avoid paying for this.&lt;/p&gt;

&lt;h3 id=&quot;paying-for-icloud-makes-more-sense&quot;&gt;Paying for iCloud makes more sense?&lt;/h3&gt;

&lt;p&gt;Indeed! Apple respects user’s privacy, its the foundation of all their offerings. In contrast to Google Photos, Apple does the magical computation by running those machine learning algorithms on the device itself. Your data is private and no one can look into it. I get the added advantage of the beautiful Photos app on macOS. The transaction also seems valid because its give and take, unlike give(x2) and take. For now, I have stopped the automatic backup from my phone and I’ll probably keep the existing photos on Google and migrate some of them to iCloud over time.&lt;/p&gt;

&lt;p&gt;Some people might want to self host their data and avoid using all the cloud providers. If you are going to do so, there are amazing free tools like Plex and PhotoView that can help you get most of what Apple and Google offer. But setting up and maintaining a server of this kind will have its own implications. I’ll leave that upto you!&lt;/p&gt;

&lt;h3 id=&quot;references&quot;&gt;References&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Google_Photos&quot;&gt;Google Photos&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.blog.google/products/photos/storage-changes/&quot;&gt;Updating Google Photos’ storage policy&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://one.google.com/&quot;&gt;Google One&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.apple.com/in/apple-one/&quot;&gt;Apple One&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.plex.tv/your-media/photos-videos/&quot;&gt;Plex&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/chrisbanes/PhotoView&quot;&gt;PhotoView&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="thoughts" /><summary type="html">Google Photos was launched in May 2015 with a motive to retire Google+ Photos and with a promise to give unlimited storage for photos upto 16 Megapixel and videos upto a 1080p resolution. I take photos from my iPhone, it limits the photo quality to 12MP which means, full resolution photos from my phone will get free cloud storage forever. And like all other Google products, they did mention that they’ll be using my photos to improve their AI for face-recognition and search. As long as my ugly pictures weren’t made public, I am fine with that. Along with me, by May 2017, half a billion users joined the bandwagon and got addicted. With their powerful AI, Google Photos easily solved a great problem of arranging, filtering and searching the photos and now its impossible to get away from it.</summary></entry><entry><title type="html">Univeral Pasteboard iOS, macOS, Android</title><link href="https://vinayjain.me/posts/shared-pasteboard" rel="alternate" type="text/html" title="Univeral Pasteboard iOS, macOS, Android" /><published>2020-10-03T06:39:25+05:30</published><updated>2020-10-03T06:39:25+05:30</updated><id>https://vinayjain.me/posts/shared-pasteboard</id><content type="html" xml:base="https://vinayjain.me/posts/shared-pasteboard">&lt;p&gt;Do you recall the times when you had to touch-type a long website address on your phone’s baby keyboard and wished to copy it from your computer and continue browsing just by pasting the URL in the address bar? Such a painful and frustrating user-experience. I’ve been doing this for a long time, some people might still be doing this but things have changed on the iOS/macOS side and partially on the Android side and the number of WTFs/day have drastically reduced. With some coding, I can further reduce them down, let’s see.&lt;/p&gt;

&lt;p&gt;Apple knew this was a problem so they fixed it with Handoff &amp;amp; Continuity. The iPhone and the Mac are my primary devices but I also like using my Android phone, it has a long list of benefits. I am frequently switching devices for their specific features and use-cases, for all the software tinkering I pick my Android device, for example, I am running a &lt;a href=&quot;https://vinayjain.me/posts/linux-on-android&quot;&gt;Linux image on my Android&lt;/a&gt; phone and on top of it I have setup pi-hole and this pi-hole server is set up as a proxy on my router to block ads and social media trackers on all devices in my home network. This hacking can’t be done on iOS because of the securely closed system. I miss some features of the Apple ecosystem when I am on Android, one such feature is Handoff and Continuity. More specifically, the universal pasteboard, the functionality of copying something on one device and pasting on another, really cool! This seems like a very small feature and indeed it is, but its impact on the user experience is huge. My life will be simpler if I can share pasteboard across all my devices including Android.&lt;/p&gt;

&lt;div class=&quot;align-center&quot;&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;&lt;a href=&quot;https://twitter.com/hashtag/WeekendProject?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#WeekendProject&lt;/a&gt; One of the many advantages of being in the Apple ecosystem is Handoff between apps specifically the shared pasteboard. It&amp;#39;ll be great if it can be shared with Android as well.&lt;/p&gt;&amp;mdash; Vinay Jain (@vinayjn7) &lt;a href=&quot;https://twitter.com/vinayjn7/status/1271058739131330561?ref_src=twsrc%5Etfw&quot;&gt;June 11, 2020&lt;/a&gt;&lt;/blockquote&gt; 
&lt;/div&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;h2 id=&quot;lets-build-this&quot;&gt;Lets build this&lt;/h2&gt;

&lt;p&gt;This implementation triggered as an idea in the evening and I rushed to Twitter to post it for validation. From the top it looks like a really complex system to build, and if I go on to implement the full functionality of Handoff and Continuity, it is indeed a difficult software to build. But when given a thought, what I need is a small subset of Apple’s implementation, the universal pasteboard. To build it, I need to know how Apple did it and what is the tech behind. With some little research, I got to know about BluetoothLE.&lt;/p&gt;

&lt;h2 id=&quot;bluetoothle&quot;&gt;BluetoothLE&lt;/h2&gt;

&lt;p&gt;Handoff &amp;amp; Continuity uses &lt;a href=&quot;https://www.bluetooth.com&quot;&gt;BluetoothLE&lt;/a&gt; (bluetooth low energy), a technology that helps nearby devices to communicate using significantly small data packets and low energy. The Bluetooth specification prefers to call the communicating devices as the Central and the Peripheral but in general terms its a client-server communication. The peripheral advertises one or more services &amp;amp; characteristics, which can be found by the centrals with a Bluetooth scan. A central connects to a peripheral with a pairing process which may or may not require authentication.&lt;/p&gt;

&lt;p&gt;The serivces and characteristics are important to understand because that is the only way the central can find a peripheral and send data to it. The central will write data on the characteristics which were advertised by the peripherals.&lt;/p&gt;

&lt;h3 id=&quot;the-gatt-server&quot;&gt;The GATT server&lt;/h3&gt;

&lt;p&gt;Advertisement of a service is totally different from data transfer. After pairing, the central is authorised to send data to the peripheral without permission. As the central is writing data to a characteristic, the peripheral needs to know how to handle this data. This can be done by setting up a GATT server on the peripheral. The server knows who is writing data on a particular characteristic and exposes certain methods to handle this data transfer. Our shared pasteboard implementaton relies on the GATT server.&lt;/p&gt;

&lt;h2 id=&quot;practicality&quot;&gt;Practicality&lt;/h2&gt;

&lt;p&gt;For this case, I am interested in getting pasteboard data from Mac to Android. I want my Android device to be discovered by a nearby Mac, you might think that turning on Bluetooth and pairing Android &amp;amp; Mac would do that. Not completely, because Android is advertising the services it supports like file sharing, Bluetooth tethering etc. Luckily, I can use the standard Bluetooth pairing process of Android and don’t have to write any code for the authentication flow. By the time of writing this post, I couldn’t find any advertised services/characteristics that could potentially link to the Android pasteboard. Unfortunately/fortunately, I had to write all the code for advertisement, services and characteristics, GATT server and for the system pasteboard manipulation. This was just the part on Android side, I still need to write code that will send data to Android. Right! the central code on Mac.&lt;/p&gt;

&lt;h3 id=&quot;pasteboard-events&quot;&gt;Pasteboard Events&lt;/h3&gt;

&lt;p&gt;Anytime I hit Cmd+C on the Mac I need to send the selected data to Android. I initially thought that there must be an event(NSNotification) fired as soon as the pasteboard contents are updated, unfortunately this isn’t the case.&lt;/p&gt;

&lt;p&gt;In computer science there are two ways to get updates from a system:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;You(subscriber) subscribe to the updates on a system(publisher), and get notified for each change.&lt;/li&gt;
  &lt;li&gt;You keep polling a system on regular time intervals and compare its latest value with the value you currently have. If it doesn’t match that means the system has a new value.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As I mentioned, I won’t be able to use the publisher-subscriber model(the optimal approach) here, I had to turn my head towards polling. And like most of times I was able to find a solution with a little help from GitHub, thanks to &lt;a href=&quot;https://gist.github.com/Daemon-Devarshi/13efd24f027a775ee862&quot;&gt;Daemon-Devarshi&lt;/a&gt; for their clean Swift implementation. Polling the pasteboard works because the amount of data transferred in polling isn’t that much and I can just ignore the battery related issues for now.&lt;/p&gt;

&lt;h3 id=&quot;the-central&quot;&gt;The Central&lt;/h3&gt;

&lt;p&gt;Since I already have the pasteboard updates, writing rest of the central code is relatively easy. Apart from the pasteboard code, the central has the following responsibilities:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Keep running in background&lt;/li&gt;
  &lt;li&gt;Connect to the Android phone when pasteboard changes&lt;/li&gt;
  &lt;li&gt;Send data to the connected Android phone&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With some help from &lt;a href=&quot;https://developer.apple.com/documentation/corebluetooth&quot;&gt;Core Bluetooth&lt;/a&gt;, it took me a little time to write a macOS script that does all that. Just because I did the custom implementation of services and characteristics the central’s code can further be optimised to scan only for the specific services and characteristics I need. And with this it’s done, I have a working solution for a shared pasteboard between all my devices.&lt;/p&gt;

&lt;p&gt;I’ll probably be pushing all this code on &lt;a href=&quot;https://www.github.com/vinayjn&quot;&gt;GitHub&lt;/a&gt; after I refactor and clean it but I am not sure when. If you are still interested in looking into it let me know and I’ll speed up the process or may be send it to you directly over email.&lt;/p&gt;</content><author><name></name></author><category term="hacking" /><summary type="html">Do you recall the times when you had to touch-type a long website address on your phone’s baby keyboard and wished to copy it from your computer and continue browsing just by pasting the URL in the address bar? Such a painful and frustrating user-experience. I’ve been doing this for a long time, some people might still be doing this but things have changed on the iOS/macOS side and partially on the Android side and the number of WTFs/day have drastically reduced. With some coding, I can further reduce them down, let’s see.</summary></entry><entry><title type="html">Running Ubuntu/Linux on Android</title><link href="https://vinayjain.me/posts/linux-on-android" rel="alternate" type="text/html" title="Running Ubuntu/Linux on Android" /><published>2020-06-17T06:39:25+05:30</published><updated>2020-06-17T06:39:25+05:30</updated><id>https://vinayjain.me/posts/linux-on-android</id><content type="html" xml:base="https://vinayjain.me/posts/linux-on-android">&lt;p&gt;Phones have become very powerful these days. Its easy to find an Android phone under $200 that is capable of powering up a desktop computer with decent performance. I was thinking about setting up a media server in my home network so I can watch movies and TV shows on all devices, I was convinced to use a Raspberry Pie for this but then I thought what if I use my Android phone for the same, its much more capable than a pie and has a lot hardware capabilities that the pie doesn’t offer out of the box. So I set course and took out my old Android phone, did some hacking and got the media server working on it. Its a long process to setup the media server and the first step in getting their is to install Ubuntu or any other Linux distribution on the Android phone. I’ll talk about the media server setup some other day but lets see how to install Ubuntu on Android.&lt;/p&gt;

&lt;h4 id=&quot;getting-the-device-ready&quot;&gt;Getting the device ready&lt;/h4&gt;

&lt;p&gt;Most of the people I know have at least one abandoned Android phone. Though its completely fine to do, I don’t recommend using your primary phone to follow this post as it would end your phone’s warranty. If you are willing to take the risk you can still follow. First, make sure you have the following items checked:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A phone running Android 7+ with root access&lt;/li&gt;
  &lt;li&gt;Basic knowledge of Linux and ssh&lt;/li&gt;
  &lt;li&gt;Internet connection&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I have tested this approach on the following configurations&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Xiaomi Redmi Note 5 Pro, running Lineage OS 17.1(Android 10), Qualcomm SDM636 Snapdragon 636 arm64 processor&lt;/li&gt;
  &lt;li&gt;Xiaomi Redmi 1s, running Lineage OS 14.1(Android 7.1.2) Qualcomm MSM8228 Snapdragon 400 ARM processor&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;configuration&quot;&gt;Configuration&lt;/h4&gt;

&lt;p&gt;Linux Deploy is an app that makes this process easy, go ahead and install the app from &lt;a href=&quot;https://play.google.com/store/apps/details?id=ru.meefik.linuxdeploy&quot;&gt;Google Play Store&lt;/a&gt;. You will need root access enabled on your device to get it working. The app greets you with a screen like in the screenshot below, please not that I am currently using version 2.6.0 it might differ if you use another app version.&lt;/p&gt;

&lt;div class=&quot;align-center&quot;&gt;
&lt;img height=&quot;100%&quot; width=&quot;100%&quot; src=&quot;/images/linux/Linux_Deploy_1.jpg&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;The instructions are pretty straight-forward and needs no explanation. Tap on the little settings button at the bottom right and you’ll see a screen as shown below, you can follow the configuration you see here or you can change according to your preference. One important thing to choose is the architecture, in the screenshot you see &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;arm64&lt;/code&gt; which is same as the android phone’s CPU architecture. Its fine to use other architectures as well but I recommend choosing the one which is most compatible with the software you are going to install in the future. The media server I wanted to install works well with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;arm64&lt;/code&gt;. Also, if you don’t know the CPU architecture of your phone you can install CPU-Z from the play store.&lt;/p&gt;

&lt;div class=&quot;align-center&quot;&gt;
&lt;img height=&quot;100%&quot; width=&quot;100%&quot; src=&quot;/images/linux/Linux_Deploy_2.png&quot; /&gt;
&lt;/div&gt;

&lt;div class=&quot;align-center&quot;&gt;
&lt;img height=&quot;100%&quot; width=&quot;100%&quot; src=&quot;/images/linux/Linux_Deploy_3.png&quot; /&gt;
&lt;/div&gt;

&lt;div class=&quot;align-center&quot;&gt;
&lt;img height=&quot;100%&quot; width=&quot;100%&quot; src=&quot;/images/linux/Linux_Deploy_4.png&quot; /&gt;
&lt;/div&gt;

&lt;div class=&quot;align-center&quot;&gt;
&lt;img height=&quot;100%&quot; width=&quot;100%&quot; src=&quot;/images/linux/Linux_Deploy_5.png&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;More about configuration:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Image Size - Consider this as the partition size for your Linux installation.&lt;/li&gt;
  &lt;li&gt;Username &amp;amp; Password - Use anything, we will use it to login with ssh&lt;/li&gt;
  &lt;li&gt;Privileged Users - Additional custom permissions for the user&lt;/li&gt;
  &lt;li&gt;Mount points - Use it to mount your internal or external sdcard to use in Ubuntu, more on this later&lt;/li&gt;
  &lt;li&gt;SSH - Enable this, we want to access this system inside our home network with ssh.&lt;/li&gt;
  &lt;li&gt;Audio - We don’t need it for our usecase&lt;/li&gt;
  &lt;li&gt;GUI - Since most of the time we will be accessing it through SSH I have skipped the GUI part. If you need GUI then you can setup a VNC viewer and configure it easily.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is all the configuration that we need for now. Tap on the three dots on the top right and select &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Install&lt;/code&gt;, the app will be downloading the entire linux image based on our configuration. Depending on your internet speed, if everything went well, you should see a screen as shown below. Now tap on the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Start&lt;/code&gt; button on the bottom left. The app will validate the configuration and start all the services of the Linux distribution. The result is a fully functional linux operating system just like we have on a desktop computer.&lt;/p&gt;

&lt;div class=&quot;align-center&quot;&gt;
&lt;img height=&quot;100%&quot; width=&quot;100%&quot; src=&quot;/images/linux/Linux_Deploy_6.png&quot; /&gt;
&lt;/div&gt;

&lt;div class=&quot;align-center&quot;&gt;
&lt;img height=&quot;100%&quot; width=&quot;100%&quot; src=&quot;/images/linux/Linux_Deploy_7.png&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;At this point we can access this system using ssh. The IP is shown at the top, for me its &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;192.168.0.137&lt;/code&gt;, it might be different for you. From a computer in the same network, you can use the below commands in any shell to login and when it asks for the password just use the password you entered during the configuration, if you forgot your password you can get it by tapping on the settings button on the bottom right.&lt;/p&gt;

&lt;pre class=&quot;splash&quot;&gt;&lt;code&gt;ssh &amp;lt;username&amp;gt;&lt;span class=&quot;keyword&quot;&gt;@&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;IP&lt;/span&gt;&amp;gt;

&lt;span class=&quot;comment&quot;&gt;// if your user name is android and IP is 192.168.0.137, use:&lt;/span&gt;
ssh android@192.&lt;span class=&quot;number&quot;&gt;168.0.137&lt;/span&gt;

&lt;span class=&quot;comment&quot;&gt;// Type yes when it asks you to continue connecting to the host
// and enter your password when it asks for it&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You are now logged-in to the system and can perform any operations as you want. If you want to avoid entering your password when you login, you can put the public ssh key of your computer in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/.ssh/authorized_keys&lt;/code&gt; file. If its not there you’ll have to create it, you can easily find articles on the web if you don’t know how to do it.&lt;/p&gt;

&lt;div class=&quot;align-center&quot;&gt;
&lt;img height=&quot;100%&quot; width=&quot;100%&quot; src=&quot;/images/linux/Linux_Deploy_8.png&quot; /&gt;
&lt;/div&gt;

&lt;h4 id=&quot;mounting-internal-and-external-sdcard&quot;&gt;Mounting internal and external sdcard&lt;/h4&gt;

&lt;p&gt;If you are not able to access the phone’s internal storage in the linux file system you will have to map the mount path of the storage in Android file system to a mount point in linux file system. To do this you have to find where is the sdcard mounted in the Android, there are two ways, one with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;adb&lt;/code&gt; and other by &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;installing any file manager app&lt;/code&gt;. I am going to tell you the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;adb&lt;/code&gt; way because I don’t want to install any other app for a small usecase. Connect your phone to your computer, make sure USB debugging is enabled, from the terminal execute the following commands&lt;/p&gt;

&lt;pre class=&quot;splash&quot;&gt;&lt;code&gt;➜  ~ adb devices
&lt;span class=&quot;type&quot;&gt;List&lt;/span&gt; of devices attached
f4936abb	device

➜  ~ adb shell
whyred:/ $ df
&lt;span class=&quot;type&quot;&gt;Filesystem&lt;/span&gt;               1K-blocks    &lt;span class=&quot;type&quot;&gt;Used Available Use&lt;/span&gt;% &lt;span class=&quot;type&quot;&gt;Mounted&lt;/span&gt; on
tmpfs                      &lt;span class=&quot;number&quot;&gt;2917628    1020   2916608   1&lt;/span&gt;% /dev
tmpfs                      &lt;span class=&quot;number&quot;&gt;2917628       0   2917628   0&lt;/span&gt;% /mnt
tmpfs                      &lt;span class=&quot;number&quot;&gt;2917628       0   2917628   0&lt;/span&gt;% /apex
/dev/block/mmcblk0p61      &lt;span class=&quot;number&quot;&gt;3096336 1637424   1442528  54&lt;/span&gt;% /
/dev/block/mmcblk0p62       &lt;span class=&quot;number&quot;&gt;806288  414160    375744  53&lt;/span&gt;% /vendor
tmpfs                      &lt;span class=&quot;number&quot;&gt;2917628    6432   2911196   1&lt;/span&gt;% /sbin
/dev/block/mmcblk0p48        &lt;span class=&quot;number&quot;&gt;12016    7480      4212  64&lt;/span&gt;% /vendor/dsp
/dev/block/mmcblk0p60       &lt;span class=&quot;number&quot;&gt;237536     212    229464   1&lt;/span&gt;% /cache
/sbin/.&lt;span class=&quot;property&quot;&gt;magisk&lt;/span&gt;/block/data  &lt;span class=&quot;number&quot;&gt;52885008 8501436  44236116  17&lt;/span&gt;% /sbin/.&lt;span class=&quot;property&quot;&gt;magisk&lt;/span&gt;/modules
/data/media               &lt;span class=&quot;number&quot;&gt;52885008 8501436  44236116  17&lt;/span&gt;% /storage/emulated
whyred:/ $
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As you can guess by the size of the partition, the internal storage in my device is mounted on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/storage/emulated&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Now just create a mount path in linux file system for this path. Open the Linux Deploy app on your phone, stop the container if its running. Go to the mount points settings and tap on the plus button on the top right.&lt;/p&gt;

&lt;div class=&quot;align-center&quot;&gt;
&lt;img height=&quot;100%&quot; width=&quot;100%&quot; src=&quot;/images/linux/Linux_Deploy_10.png&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;The Android path &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/storage/emulated&lt;/code&gt; goes in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Source&lt;/code&gt; field and the linux path goes in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Target&lt;/code&gt;. Tap on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;OK&lt;/code&gt; and start the container again, login to the system and see if you can access the sdcard. You will probably see &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Permission Denied&lt;/code&gt; error when you try to access the folder, its because the user is not part of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;root&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;aid_everybody&lt;/code&gt; groups you can check that by the command&lt;/p&gt;

&lt;pre class=&quot;splash&quot;&gt;&lt;code&gt;$ ls -l
total &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;
drwx--x--x. &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; root aid_everybody &lt;span class=&quot;number&quot;&gt;4096&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Jul&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;17 21&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;00&lt;/span&gt; sdcard

$ groups android
android : android aid_graphics aid_sdcard_rw aid_inet 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We can fix that by adding the linux user(android in my case) to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;aid_everybody&lt;/code&gt; group. Use the command below to do this, you will have to logout and then login again to let this change take effect.&lt;/p&gt;

&lt;pre class=&quot;splash&quot;&gt;&lt;code&gt;$ sudo usermod -a -&lt;span class=&quot;type&quot;&gt;G&lt;/span&gt; aid_everybody android
$ exit
&lt;span class=&quot;type&quot;&gt;Connection&lt;/span&gt; to &lt;span class=&quot;number&quot;&gt;192.168.0.137&lt;/span&gt; closed.

&lt;span class=&quot;comment&quot;&gt;// Login again and check&lt;/span&gt;
$ cd sdcard
$ ls
&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;
$ ls -l &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;
total &lt;span class=&quot;number&quot;&gt;1623408&lt;/span&gt;
drwxrwx---. &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; root aid_everybody       &lt;span class=&quot;number&quot;&gt;4096&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Jun&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;17 09&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;02&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Alarms&lt;/span&gt;
drwxrwx---. &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt; root aid_everybody       &lt;span class=&quot;number&quot;&gt;4096&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Jun&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;17 09&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;02&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Android&lt;/span&gt;
drwxrwx---. &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; root aid_everybody       &lt;span class=&quot;number&quot;&gt;4096&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Jun&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;19 10&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;33&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;DCIM&lt;/span&gt;
drwxrwx---. &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; root aid_everybody       &lt;span class=&quot;number&quot;&gt;4096&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Jun&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;17 13&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;26&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Documents&lt;/span&gt;
drwxrwx---. &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt; root aid_everybody       &lt;span class=&quot;number&quot;&gt;4096&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Jul&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;18 08&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;36&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Download&lt;/span&gt;
-rw-rw----. &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; root aid_everybody &lt;span class=&quot;number&quot;&gt;8589934592&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Jul&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;24 19&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;57&lt;/span&gt; linux.&lt;span class=&quot;property&quot;&gt;img&lt;/span&gt;
drwxrwx---. &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; root aid_everybody       &lt;span class=&quot;number&quot;&gt;4096&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Jun&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;17 13&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;25&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Movies&lt;/span&gt;
drwxrwx---. &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; root aid_everybody       &lt;span class=&quot;number&quot;&gt;4096&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Jun&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;17 09&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;02&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Music&lt;/span&gt;
drwxrwx---. &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; root aid_everybody       &lt;span class=&quot;number&quot;&gt;4096&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Jun&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;17 09&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;02&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Notifications&lt;/span&gt;
drwxrwx---. &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt; root aid_everybody       &lt;span class=&quot;number&quot;&gt;4096&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Jul&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;15 18&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;14&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Pictures&lt;/span&gt;
drwxrwx---. &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; root aid_everybody       &lt;span class=&quot;number&quot;&gt;4096&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Jun&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;17 09&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;02&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Podcasts&lt;/span&gt;
drwxrwx---. &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; root aid_everybody       &lt;span class=&quot;number&quot;&gt;4096&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Jun&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;17 09&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;02&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Ringtones&lt;/span&gt;
drwxrwx---. &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; root aid_everybody       &lt;span class=&quot;number&quot;&gt;4096&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Jun&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;17 09&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;51&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Shows&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you are also running Android 10, due to strict permissions of the OS, Linux Deploy will not be able to access the external sdcard. I have tried a few ways of mounting it but I couldn’t succeed. If you manage to mount the external sdcard please let me know in the comments.&lt;/p&gt;

&lt;p&gt;Okay, that’s all folks, if you reached here you have a fully functional linux machine. This was a long process, but we are just getting started, there’s a lot more we can achieve with it. In the future posts I will be telling you how you can extend this&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;As an ad-block proxy server for your home network with Pi-Hole.&lt;/li&gt;
  &lt;li&gt;A media server to stream your favorite movies and TV Shows with Plex.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you have more ideas in mind please let me know. :)&lt;/p&gt;</content><author><name></name></author><category term="hacking" /><category term="DIY" /><summary type="html">Phones have become very powerful these days. Its easy to find an Android phone under $200 that is capable of powering up a desktop computer with decent performance. I was thinking about setting up a media server in my home network so I can watch movies and TV shows on all devices, I was convinced to use a Raspberry Pie for this but then I thought what if I use my Android phone for the same, its much more capable than a pie and has a lot hardware capabilities that the pie doesn’t offer out of the box. So I set course and took out my old Android phone, did some hacking and got the media server working on it. Its a long process to setup the media server and the first step in getting their is to install Ubuntu or any other Linux distribution on the Android phone. I’ll talk about the media server setup some other day but lets see how to install Ubuntu on Android.</summary></entry><entry><title type="html">Social Media Distancing</title><link href="https://vinayjain.me/posts/social-media-distancing" rel="alternate" type="text/html" title="Social Media Distancing" /><published>2020-02-10T18:03:25+05:30</published><updated>2020-02-10T18:03:25+05:30</updated><id>https://vinayjain.me/posts/social-media-distancing</id><content type="html" xml:base="https://vinayjain.me/posts/social-media-distancing">&lt;p&gt;I am obsessed with app notifications. I’ve been trying to get away from screens but I’m addicted to all of my devices. I’m always online and I never cut-off from internet. Even when I’m accompanied with people I enjoy talking to, I keep thinking about my phone. I was using my phone every where, at the coffee shop, at the restaurants, in office working hours and also in the washroom. I stopped going out on weekends and preferred to watch movies and shows at home on my laptop. I stayed awake late nights sacrificing 2-3 hrs of precious sleep for nothing but to watch some YouTube videos. I hurt my eyes every night because the dimmest brightness is still too bright in the dark. My devices started owning me. This over-possession of devices has reduced my engagement in concrete and meaningful discussions.&lt;/p&gt;

&lt;p&gt;Earlier in the previous month I was at my friend’s place. In between all the fun, I felt my phone’s vibration. I tried being in the conversation but I couldn’t stop thinking about the notification. What could’ve changed in the world for which I am notified of? And my friends were able to figure out that I was in a different world. I felt bad and I knew that I missed the joy of “being” with my friends. I knew that I love talking to people but the phone was taking over and I couldn’t stop thinking about this loss. Being concerned about it and addressing it as a problem, introspecting, I concluded that its not an issue with notifications and devices, it’s an issue with self control, that’s how people get addicted to things. This addiction was bad and something had to do be done and I’m glad that I realized that–and not too late!&lt;/p&gt;

&lt;h2 id=&quot;inputs&quot;&gt;Inputs?&lt;/h2&gt;

&lt;h4 id=&quot;the-cleanup&quot;&gt;The Cleanup&lt;/h4&gt;

&lt;p&gt;The first thing I did was to minimise the number of notifications I get on my phone. Though there is a way to disable notifications completely, I don’t think it’s a suitable option for me as I can’t afford losing some important notifications which really need my attention. What worked well for me was to uninstall tons of apps which I rarely use and disable notifications for apps which are not so important.&lt;/p&gt;

&lt;h4 id=&quot;limited-app-usage&quot;&gt;Limited App Usage&lt;/h4&gt;

&lt;p&gt;All modern operating systems have a really good feature to limit app usage. I set a limit to the apps which were taking most of my time, but it couldn’t work well for me as I found myself discarding warnings shown by the OS for limited usage. Instead, I chose a more restrictive approach I uninstalled the apps which can be accessed from a computer. It not only removed the notifications altogether but also helped me save a lot of time as it significantly dropped the number of times I opened them in a day. Some of the apps which fall in this category: Twitter, YouTube, Reddit, Quora, Instagram. I personally started seeing pretty good results with this approach.&lt;/p&gt;

&lt;h4 id=&quot;better-sleep-cycles&quot;&gt;Better sleep cycles&lt;/h4&gt;

&lt;p&gt;Everyone knows that getting 7-8 hrs sleep every night has great health benefits but are we really getting it? I wasn’t. So, as part of this process I also wanted to improve my sleeping cycles. To achieve that I stopped using all gadgets 45 minutes before bedtime and enabled Do not Disturb to silent each and every notification after 10:00PM, no Slack, no Gmail, no Whatsapp and no Reddit. I borrowed this idea from this amazing podcast &lt;a href=&quot;https://www.youtube.com/watch?v=De9pbbb_4VE&amp;amp;t=559s&quot;&gt;FREE OF COST Fitness Consultation - Luke Coutinho on The Ranveer Show&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;the-discipline-and-the-will&quot;&gt;The Discipline and the Will&lt;/h2&gt;

&lt;p&gt;This is obviously an ambitious path to follow. Initially, it was hard to get away from the phone and for some days I couldn’t follow the plan at all because without the phone I felt I had nothing to do, I was bored. Even if I was not using my Social Media I was thinking about it all the time. Like every fight against addiction, this too did take a lot of discipline and a sheer will to make it work. Forming a habit is hard and a forming a good one even harder. Again, I borrowed ideas from &lt;a href=&quot;https://jamesclear.com/atomic-habits&quot;&gt;Atomic Habits - James Clear&lt;/a&gt; to get rid of bad habits and form the good ones. I challenged myself to follow it for month and tracked progress on a chart, marked mistakes on the calendar. Looking at the calendar motivates me to do better.&lt;/p&gt;

&lt;h2 id=&quot;outputs&quot;&gt;Outputs&lt;/h2&gt;

&lt;p&gt;Cutting off from the internet and social media significantly improved my life. Individually, these changes look tiny but combined these are monumental.&lt;/p&gt;

&lt;h3 id=&quot;more-time&quot;&gt;More time&lt;/h3&gt;

&lt;p&gt;It might not be visible but when quantified, the amount of time I spent on the internet browsing garbage turned out to be huge, keep aside the time taken in context-switching! Now that I have bandwidth available I can utilise it for constructive use-cases.&lt;/p&gt;

&lt;h4 id=&quot;improved-focus--attention-spans&quot;&gt;Improved focus &amp;amp; attention spans&lt;/h4&gt;

&lt;p&gt;I was easily distracted by notifications. Now that they are gone, I started seeing improvements in focus on my work and tasks at hand. Most of the times I am focussed like a Hawk. My attention spans are getting longer and I don’t get bored easily now its totally on the person I am talking to.&lt;/p&gt;

&lt;h4 id=&quot;faster-reading-speed---my-new-super-power&quot;&gt;Faster reading speed - my new super power&lt;/h4&gt;

&lt;p&gt;With more time at hand, I started reading a lot. My reading speed has improved and I read &lt;a href=&quot;https://www.amazon.in/gp/product/0062301233/ref=x_gr_w_bb_sin?ie=UTF8&amp;amp;tag=x_gr_w_bb_in-21&amp;amp;linkCode=as2&amp;amp;camp=3626&amp;amp;creative=24790&quot;&gt;Elon Musk’s Biography&lt;/a&gt; in 8-days. I am about to read more books in a year than I read in my entire life.&lt;/p&gt;

&lt;h4 id=&quot;yoga-gave-me-the-fittest-body&quot;&gt;Yoga gave me the fittest body&lt;/h4&gt;

&lt;p&gt;If you know me personally, you know that I have never put a step in a gym not because I am fit but I am lazy and I make excuses. Now I am changed man, I started with an easy challenge of 30-pushups a day no matter what. That made my upper body stronger. Then, I have started doing Yoga. I can do a 240 seconds consistent headstand, tripod headstand with no wall support. My aim is to get fit and strong enough to do a handstand. I now have the fittest body of my lifetime and I am seeing consistent improvements.&lt;/p&gt;

&lt;h3 id=&quot;deep-sleep---dreams-are-back&quot;&gt;Deep sleep - Dreams are back!&lt;/h3&gt;

&lt;p&gt;Thr trick of cutoff from gadgets before 45 minutes to bed worked well. Initially I couldn’t fall asleep on time, perhaps it was because my body and my mind weren’t habitual of going to bed early. One way to fix it was by force waking up early, even without completing 8 hrs of sleep, so the body gets tired by the end of the day. It started working out and I could fall asleep within 30 minutes. I never realised earlier that my dreams were gone, I did when started dreaming again perhaps getting in to the deep sleep was the reason. Deep sleep is highly underrated, your next day depends on it, your life depends on it.&lt;/p&gt;

&lt;p&gt;Obviously, I didn’t get these results just by avoiding my phone. I got these because I started doing things which made me hyper productive. I started talking to good people, my social groups changed and we discussed meaningful stuff. Seeing these great results for the next subsequent months I started doing more productive things. Just by putting a limit on social media and device usage I could do so much more.&lt;/p&gt;

&lt;p&gt;I didn’t write this to show how bad technology is. I love tech and knowing about it has always helped me grow faster in career. I’m just putting a limit on its usage and trying to think more of how beautiful life can be a few inches above that screen. Technology has a huge share of productive usecases in all imaginable situations but it also has negative implications. There has to be a limit on it’s usage and I’ve started creating mine. You should too. Try whatever works out for you, no one is perfect but there is always a scope improvement this reminds me of a mind blowing passage from the book &lt;a href=&quot;https://www.amazon.in/gp/product/1250194466/ref=x_gr_w_bb_sin?ie=UTF8&amp;amp;tag=x_gr_w_bb_in-21&amp;amp;linkCode=as2&amp;amp;camp=3626&amp;amp;creative=24790&quot;&gt;Creative Selection - Ken Kocienda&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When Lombardi joined the Green Bay Packers in 1959, he made an immediate and indelible first impression. In front of a portable blackboard as the players sat down, he picked up a piece of chalk and began to speak.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“Gentlemen,” he said, “we have a great deal of ground to cover. We’re going to do things a lot differently than they’ve been done here before . . . [We’re] going to relentlessly chase perfection, knowing full well we will not catch it, because perfection is not attainable. But we are going to relentlessly chase it because, in the process, we will catch excellence.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Catching excellence, this is what I believe in and feel fortunate enough to know how to achieve it. I have no PHD in life advice, this is a write-up of what worked for me and how I got inspired. The content and links I shared in the post were life changing for me I highly recommend them.&lt;/p&gt;</content><author><name></name></author><summary type="html">I am obsessed with app notifications. I’ve been trying to get away from screens but I’m addicted to all of my devices. I’m always online and I never cut-off from internet. Even when I’m accompanied with people I enjoy talking to, I keep thinking about my phone. I was using my phone every where, at the coffee shop, at the restaurants, in office working hours and also in the washroom. I stopped going out on weekends and preferred to watch movies and shows at home on my laptop. I stayed awake late nights sacrificing 2-3 hrs of precious sleep for nothing but to watch some YouTube videos. I hurt my eyes every night because the dimmest brightness is still too bright in the dark. My devices started owning me. This over-possession of devices has reduced my engagement in concrete and meaningful discussions.</summary></entry><entry><title type="html">Bootcamp Coach</title><link href="https://vinayjain.me/posts/ios-bootcamp" rel="alternate" type="text/html" title="Bootcamp Coach" /><published>2019-09-18T06:39:25+05:30</published><updated>2019-09-18T06:39:25+05:30</updated><id>https://vinayjain.me/posts/iOS-bootcamp</id><content type="html" xml:base="https://vinayjain.me/posts/ios-bootcamp">&lt;p&gt;When I was in college I used to teach school students Mathematics and Physics, which still are my favorite subjects. I also presented a few tech related topics in my college to help my friends understand them better. I enjoy teaching, it’s fun and it is always a good learning exercise for me as well. It gives an entirely different perspective to learning and being on the other side makes me feel more confident of the things I already know. But after I graduated and started working in the software industry I didn’t get enough opportunities and couldn’t find time to do it. I attended tech meetups and thought of presenting a few topics but couldn’t, for me preparing a presentation was a herculean task that time.&lt;/p&gt;

&lt;h3 id=&quot;opportunity-and-time&quot;&gt;Opportunity and Time&lt;/h3&gt;

&lt;p&gt;I am working with Gojek right now and they organize a 3 months bootcamp for the new joiners(fresh graduates) to pick up the pace. The participants must enrol for all the courses in the bootcamp. These 3 months are divided into Core Engineering, DevOps, Data Engineering, Mobile Development and other tech stuff, you can read more about the &lt;a href=&quot;https://blog.gojekengineering.com/what-is-the-go-jek-engineering-bootcamp-de7778836da9&quot;&gt;Gojek Engineering Bootcamp here&lt;/a&gt;. Since I am an iOS developer, the organisers asked me if I was interested in coaching the iOS bootcamp. Coaching the bootcamp means I will be out of the office for a week and doing so will affect the timelines of deliverables I already have. I was interested in taking this opportunity but first, it had to be approved by the manager. My manager is a great guy, I knew he won’t disappoint me, 2-3 meetings and little rescheduling helped us figure out ways through which I would make it to the bootcamp.&lt;/p&gt;

&lt;h3 id=&quot;ios-bootcamp&quot;&gt;iOS Bootcamp&lt;/h3&gt;

&lt;p&gt;iOS bootcamp was short and so was Android, no offence intended and none taken. One week is a very short period to teach iOS to people who have never done it before. You have to teach them the language, tell them about the ecosystem, the development environment and also about UI components. One good thing about teaching iOS in 2019 is that you don’t have to teach Objective-C, which actually is a great language but teaching it in a bootcamp will probably take more efforts and a lot more time, Swift on the other hand can be taught easily. So we planned to teach the basics of Swift. Also, to let the bootcampers get the feel of iOS and mobile development in general, we decided to build a TicTacToe game within the bootcamp timeline. Building the game kept the bootcampers engaged and interested in learning iOS, it also helped us cover important topics like building user interfaces with the Cocoa Touch, unit tests and concurrency etc. Other important topics like data persistence, animations, audio support were given as part of coding assignments.&lt;/p&gt;

&lt;h3 id=&quot;wrapping-up&quot;&gt;Wrapping Up&lt;/h3&gt;

&lt;p&gt;For the final two assignments, we had split the bootcampers into teams, each team had 4 members. The last two days we didn’t teach them much, we gave them assignments, solved open issues, review code and let them present what they had built in front of everyone. Some of the teams made apps that were so good that with a little polish they can be uploaded to the App Store. I personally liked the last two days, seeing their progress made us feel proud of ourselves and implicitly gave us feedback that we did well. The last session of last was all about this, one on ones with the bootcampers, feedback for them, feedback for us and a few fun activities. We received some negative feedbacks as well but they were just for the initial days where the participants felt that the theory was boring and they needed more hands-on exercises. Overall, I enjoyed the bootcamp. The next bootcamp will be in Jakarta and if given a chance I would definitely enrol again and fix the mistakes and use the learnings in my first bootcamp.&lt;/p&gt;

&lt;p&gt;If you reached here, thanks for your time. Also, if you are interested in working with Gojek please shoot me an email or maybe head to the careers page to see the current openings.&lt;/p&gt;</content><author><name></name></author><category term="ios" /><summary type="html">When I was in college I used to teach school students Mathematics and Physics, which still are my favorite subjects. I also presented a few tech related topics in my college to help my friends understand them better. I enjoy teaching, it’s fun and it is always a good learning exercise for me as well. It gives an entirely different perspective to learning and being on the other side makes me feel more confident of the things I already know. But after I graduated and started working in the software industry I didn’t get enough opportunities and couldn’t find time to do it. I attended tech meetups and thought of presenting a few topics but couldn’t, for me preparing a presentation was a herculean task that time.</summary></entry><entry><title type="html">Drawing Dotted Lines in iOS</title><link href="https://vinayjain.me/posts/drawing-dotted-line-in-ios" rel="alternate" type="text/html" title="Drawing Dotted Lines in iOS" /><published>2019-08-31T06:39:25+05:30</published><updated>2019-08-31T06:39:25+05:30</updated><id>https://vinayjain.me/posts/drawing-dotted-line-in-ios</id><content type="html" xml:base="https://vinayjain.me/posts/drawing-dotted-line-in-ios">&lt;p&gt;My favorite thing in frontend development is building custom user interfaces. It keeps challenging creativity and tests my eye for detail. Most of the times user interfaces give you instant feedback on what works and what doesn’t, based on these feedbacks you keep making changes which further improve the user experience. However, making these changes everytime isn’t easy, very often we hit roadblocks because of the limited functionality or maybe restricted API access. Situations like these pushes you to discover new ways of doing the same thing. As a software engineer you can do so by either browsing Stackoverflow or reading documentation or using your imagination and creativity. One recent encounter of this kind was drawing a dotted line between two points in iOS.&lt;/p&gt;

&lt;h3 id=&quot;dotted-lines&quot;&gt;Dotted lines&lt;/h3&gt;

&lt;p&gt;The designer sent you an Abstract link and you see a dotted line in between two images. You tell the estimates and you start building the new designs. The most common way of drawing a dotted line in iOS is by using a &lt;a href=&quot;https://developer.apple.com/documentation/uikit/uibezierpath&quot;&gt;UIBezierPath&lt;/a&gt; and drawing lines by setting a &lt;a href=&quot;https://developer.apple.com/documentation/quartzcore/cashapelayer/1521921-linedashpattern&quot;&gt;lineDashPattern&lt;/a&gt;. A basic implementation is shown below:&lt;/p&gt;

&lt;pre class=&quot;splash&quot;&gt;&lt;code&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; path = &lt;span class=&quot;type&quot;&gt;UIBezierPath&lt;/span&gt;()
&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; dashPattern: [&lt;span class=&quot;type&quot;&gt;CGFloat&lt;/span&gt;] = [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;16.0&lt;/span&gt;]
path.&lt;span class=&quot;call&quot;&gt;setLineDash&lt;/span&gt;(dashPattern, count: dashPattern.&lt;span class=&quot;property&quot;&gt;count&lt;/span&gt;, phase: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)
path.&lt;span class=&quot;property&quot;&gt;lineWidth&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;
path.&lt;span class=&quot;property&quot;&gt;lineCapStyle&lt;/span&gt; = .&lt;span class=&quot;dotAccess&quot;&gt;round&lt;/span&gt;
path.&lt;span class=&quot;call&quot;&gt;move&lt;/span&gt;(to: &lt;span class=&quot;type&quot;&gt;CGPoint&lt;/span&gt;(x: rect.&lt;span class=&quot;property&quot;&gt;minX&lt;/span&gt;, y: rect.&lt;span class=&quot;property&quot;&gt;midY&lt;/span&gt;))
path.&lt;span class=&quot;call&quot;&gt;addLine&lt;/span&gt;(to: &lt;span class=&quot;type&quot;&gt;CGPoint&lt;/span&gt;(x: rect.&lt;span class=&quot;property&quot;&gt;maxX&lt;/span&gt;, y: rect.&lt;span class=&quot;property&quot;&gt;midY&lt;/span&gt;))
&lt;span class=&quot;type&quot;&gt;UIColor&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;red&lt;/span&gt;.&lt;span class=&quot;call&quot;&gt;setStroke&lt;/span&gt;()
path.&lt;span class=&quot;call&quot;&gt;stroke&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This code gives the expected output, a dotted line.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/xasdcfghnjuhgerfadscvfbf.png&quot; alt=&quot;Dots line with UIBezierPath&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It looks fine, but if you look closely you’ll find out that both ends are different. The left end has a partial dot and the right end has some extra spacing left. This unenven spacing is due to the lineDashpattern. The array of values we provide to the pattern tells the system when to paint(0.5) and when to unpaint(16.0). Changing these values won’t help much as they do not consider the frame boundary when drawing. First lets see what the correct output looks like:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/csvbgdfmghfnbsvdacscdvbfg.png&quot; alt=&quot;Dots with equal spacing&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This line has equal spacing around on both ends. If you think about it, to do this we just want to know how many dots can fit in the available space, then we draw the dots and then do some magic which centers the line in the view it is drawn on. By centering the line we ensure that it has equal space around both ends. I had a few approaches in mind, you can pick any one of them as per your choice, but I am going to discuss only one approach here:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Set the start and end point of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;UIBezierPath&lt;/code&gt; line.&lt;/li&gt;
  &lt;li&gt;Use a &lt;a href=&quot;https://developer.apple.com/documentation/quartzcore/cashapelayer&quot;&gt;CAShapeLayer&lt;/a&gt; and only stroke it to the desired length and the set its position to the center.&lt;/li&gt;
  &lt;li&gt;Use a &lt;a href=&quot;https://developer.apple.com/documentation/quartzcore/careplicatorlayer&quot;&gt;CAReplicatorLayer&lt;/a&gt; and set its &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;instanceCount&lt;/code&gt; property to the number of dots that can fit in.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;using-careplicatorlayer-for-dotted-lines&quot;&gt;Using CAReplicatorLayer for dotted lines:&lt;/h3&gt;

&lt;p&gt;I have talked about &lt;a href=&quot;https://vinayjain.me/posts/conversation-with-calayer#careplicatorlayer&quot;&gt;CAReplicatorLayer&lt;/a&gt; earlier as well. I remembered that I had implemented a typing indicator with the help of layer replication so I gave it a try again to build a dotted line.&lt;/p&gt;

&lt;div class=&quot;align-center&quot;&gt;
&lt;img src=&quot;/images/typing.gif&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;The benefit I see for using CAReplicatorLayer is that it works on the basis of instance count which you cannot give for the other two ways. And the centering logic becomes easy as you can just set the frame of this layer to center of the view. Have a look at the code below to see how it is done, I am adding comments inline to avoid any further explanation.&lt;/p&gt;

&lt;pre class=&quot;splash&quot;&gt;&lt;code&gt;layer.&lt;span class=&quot;property&quot;&gt;rasterizationScale&lt;/span&gt; = &lt;span class=&quot;type&quot;&gt;UIScreen&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;main&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;scale&lt;/span&gt;
layer.&lt;span class=&quot;property&quot;&gt;shouldRasterize&lt;/span&gt; = &lt;span class=&quot;keyword&quot;&gt;true

let&lt;/span&gt; spacing: &lt;span class=&quot;type&quot;&gt;CGFloat&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;
&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; dotRadius: &lt;span class=&quot;type&quot;&gt;CGFloat&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;

&lt;span class=&quot;comment&quot;&gt;// We want every replicated instance to be translated
// by this factor&lt;/span&gt;
&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; translateFactor = ((dotRadius * &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) + spacing)

&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; count = &lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;((rect.&lt;span class=&quot;property&quot;&gt;width&lt;/span&gt;) / translateFactor)

&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; circle = &lt;span class=&quot;type&quot;&gt;CAShapeLayer&lt;/span&gt;()
&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; path = &lt;span class=&quot;type&quot;&gt;UIBezierPath&lt;/span&gt;(ovalIn: &lt;span class=&quot;type&quot;&gt;CGRect&lt;/span&gt;(x: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, y: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, width: &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; * dotRadius, height: &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; * dotRadius))
circle.&lt;span class=&quot;property&quot;&gt;fillColor&lt;/span&gt; = &lt;span class=&quot;type&quot;&gt;UIColor&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;black&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;cgColor&lt;/span&gt;
circle.&lt;span class=&quot;property&quot;&gt;path&lt;/span&gt; = path.&lt;span class=&quot;property&quot;&gt;cgPath&lt;/span&gt;

&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; replicator = &lt;span class=&quot;type&quot;&gt;CAReplicatorLayer&lt;/span&gt;()
replicator.&lt;span class=&quot;call&quot;&gt;addSublayer&lt;/span&gt;(circle)
replicator.&lt;span class=&quot;property&quot;&gt;instanceCount&lt;/span&gt; = count

&lt;span class=&quot;comment&quot;&gt;// translate every next instance by translateFactor&lt;/span&gt;
&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; transform = &lt;span class=&quot;type&quot;&gt;CATransform3DIdentity&lt;/span&gt;
transform = &lt;span class=&quot;type&quot;&gt;CATransform3DTranslate&lt;/span&gt;(transform, translateFactor, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;);
replicator.&lt;span class=&quot;property&quot;&gt;instanceTransform&lt;/span&gt; = transform
layer.&lt;span class=&quot;call&quot;&gt;addSublayer&lt;/span&gt;(replicator)
replicator.&lt;span class=&quot;property&quot;&gt;masksToBounds&lt;/span&gt; = &lt;span class=&quot;keyword&quot;&gt;true

let&lt;/span&gt; dotsWidth = &lt;span class=&quot;type&quot;&gt;CGFloat&lt;/span&gt;(count) * translateFactor - spacing

&lt;span class=&quot;comment&quot;&gt;// Find the new origin for replicator layer&lt;/span&gt;
&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; x = (rect.&lt;span class=&quot;property&quot;&gt;width&lt;/span&gt; - dotsWidth) / &lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt;

&lt;span class=&quot;comment&quot;&gt;// Use the new x value in the frame
// so as to center the replicator layer
// in view bounds&lt;/span&gt;
replicator.&lt;span class=&quot;property&quot;&gt;frame&lt;/span&gt; = &lt;span class=&quot;type&quot;&gt;CGRect&lt;/span&gt;(x: x, y: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, width: dotsWidth, height: rect.&lt;span class=&quot;property&quot;&gt;height&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The main reason for using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CAReplicatorLayer&lt;/code&gt; here is that it gives me more control to each dot and every instance is animatable, so if there are any changes to be done on this dotted line, those can be done easily. Regarding performance, I haven’t done any kind of benchmarking on which approach is efficient as I am drawing this layer only at one place. But if you really want to know, I think the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CAShapeLayer&lt;/code&gt; base implementation will out perform this approach beacuse using that you only draw one layer. If you have any suggestions and feedbacks to improve this please do let me know in the comments.&lt;/p&gt;</content><author><name></name></author><category term="ios" /><summary type="html">My favorite thing in frontend development is building custom user interfaces. It keeps challenging creativity and tests my eye for detail. Most of the times user interfaces give you instant feedback on what works and what doesn’t, based on these feedbacks you keep making changes which further improve the user experience. However, making these changes everytime isn’t easy, very often we hit roadblocks because of the limited functionality or maybe restricted API access. Situations like these pushes you to discover new ways of doing the same thing. As a software engineer you can do so by either browsing Stackoverflow or reading documentation or using your imagination and creativity. One recent encounter of this kind was drawing a dotted line between two points in iOS.</summary></entry><entry><title type="html">Demystifying @property and attributes</title><link href="https://vinayjain.me/posts/properties-and-mysteries" rel="alternate" type="text/html" title="Demystifying @property and attributes" /><published>2017-07-25T06:39:25+05:30</published><updated>2017-07-25T06:39:25+05:30</updated><id>https://vinayjain.me/posts/properties-and-mysteries</id><content type="html" xml:base="https://vinayjain.me/posts/properties-and-mysteries">&lt;p&gt;Whenever we declare properties in Objective-C there are some keywords between the parentheses like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;strong&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;weak&lt;/code&gt;,  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;atomic&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nonatomic&lt;/code&gt;. There can be multiple comma separated words in between the parentheses, sometimes we don’t add any keywords there and keep the default compiler behavior. In this post we’ll discuss what these keywords/attributes actually mean and what are the effects of using one over the other. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@property&lt;/code&gt; are specific to Objective-C but the concepts can be applied to Swift as well, if you are a Swift only dev I still recommend going through this post once.&lt;/p&gt;

&lt;p&gt;Broadly, the change in behavior of a property with these words fall into three categories, lets see what they are:&lt;/p&gt;

&lt;h3 id=&quot;atomicity-atomic-nonatomic&quot;&gt;Atomicity (atomic, nonatomic)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;atomic&lt;/strong&gt; is the default behavior, if we don’t type atomic or nonatomic then the property is atomic. atomic ensures that if we try to read the property we always get some valid value, it will never be junk or garbage data.&lt;/p&gt;

    &lt;p&gt;Lets say, multiple threads are reading and writing the property simultaneously, at each and every instant the value read from the property is a good value. We don’t know what the value will be, it can be the value before the new value gets written or it can be the new value.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;nonatomic&lt;/strong&gt; as it is (non)atomic it doesn’t do whatever atomic does. To make a property nonatomic we have to add this keyword in between the parentheses. With nonatomic properties you lose the guarantee on the validity of values, reading a nonatomic property can return a garbage value.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Since atomic somehow manages the validity of the value, it has some performance limitations. Access to atomic properties are relatively slower than nonatomic properties. If you are creating properties which involve frequent write operations then it is recommended to make the properties nonatomic.&lt;/p&gt;

&lt;p&gt;There’s a confusion in most developer’s mind that creating a property atomic makes it thread-safe. Atomicity has nothing to do with thread-safety. There are other ways to make the properties thread-safe but that discussion is beyond the scope of this post.&lt;/p&gt;

&lt;h3 id=&quot;write-access-readonly-readwrite&quot;&gt;Write Access (readonly, readwrite)&lt;/h3&gt;

&lt;p&gt;Both of these keywords are self explanatory. The default behavior is readwrite, so if we don’t specify any of these the property will allow write access to the instance variable. readonly restricts write access from everyone including the class it is declared in.&lt;/p&gt;

&lt;p&gt;To allow write access to the property in the class then we have to create an interface extension in the implementation file and override the property by making it readwrite. This way the classes importing this class will be restricted to modify its value.&lt;/p&gt;

&lt;pre class=&quot;splash&quot;&gt;&lt;code&gt;&lt;span class=&quot;comment&quot;&gt;// MyClass.h&lt;/span&gt;
&lt;span class=&quot;keyword&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;MyClass&lt;/span&gt;: &lt;span class=&quot;type&quot;&gt;NSObject&lt;/span&gt;
&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt; (nonatomic, readonly) &lt;span class=&quot;type&quot;&gt;NSString&lt;/span&gt; *value;
&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;

&lt;span class=&quot;comment&quot;&gt;// MyClass.m&lt;/span&gt;
&lt;span class=&quot;keyword&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;MyClass&lt;/span&gt;()
&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt; (nonatomic, readwrite) &lt;span class=&quot;type&quot;&gt;NSString&lt;/span&gt; *value;
&lt;span class=&quot;keyword&quot;&gt;@end

@implementation&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;MyClass&lt;/span&gt;

- (void)setSomeValue:(&lt;span class=&quot;type&quot;&gt;NSString&lt;/span&gt; *) &lt;span class=&quot;call&quot;&gt;newValue&lt;/span&gt; {
    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;value&lt;/span&gt; = newValue;
}

&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;storage--ownership-strong-weak-copy&quot;&gt;Storage &amp;amp; Ownership (strong, weak, copy)&lt;/h3&gt;

&lt;p&gt;Memory management in iOS is done with Automatic Reference Counting(ARC) and cleanup is dependent on the reference count or retain count of the objects in memory. An object sends a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dealloc&lt;/code&gt; message as soon as its retain count reaches 0.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;strong&lt;/strong&gt; is the default behavior, if you don’t specify any of the storage or ownership attributes the property holds a strong reference to the instance variable. A strong reference always owns the object is pointing to. Every strong reference to a variable increases its retain count by 1. Since the strong reference is owning the object, as longs as there is at least one strong reference to the variable it will not be deallocated from the memory.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;weak&lt;/strong&gt; is analogous to strong. When a property is weak, it holds a weak reference to the instance variable but doesn’t own it. A weak reference doesn’t increase the retain count of the object. If there are no strong references to the object the object will be deallocated and all the weak reference to this object are set to nil so that the weak pointers doesn’t point to garbage data and the operations with these pointers doesn’t crash the app.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;No discussion of strong and weak can end without talking about retain cycles.&lt;/p&gt;

&lt;p&gt;Languages like Objective-C and C# depends on reference count to manage memory and these languages don’t like retain cycles because when a retain cycle is present the memory management techniques fail.&lt;/p&gt;

&lt;p&gt;A retain cycle occurs when properties hold strong references to each other’s instance variables and when this happens both the objects cannot be deallocated because their reference count is not 0. Smart compilers give warnings about probable retain cycle on compile time only. To avoid retain cycles in these situations you can make one of the properties weak so that the object it is pointing to can be cleared by ARC.&lt;/p&gt;

&lt;p&gt;We usually use this practice in setting the delegate and datasource properties of protocols. Retain cycles are the reason why it is recommended to keep the delegate and datasource properties in protocols as weak. The view controller holds a strong reference to the delegate and if the delegate was strong, then it will also hold a strong reference back to the view controller and will create a retain cycle.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Bonus: I just explained you how ARC works in Objective-C!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;copy&lt;/strong&gt; is similar to strong but instead of owning and increasing the retain count of the object, it creates a new copy of that object and holds a strong reference to the copied object. This way if we change the new object we will still be able to get the old value from other references. copy properties works great with mutable objects and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NSString&lt;/code&gt;s. The instance variable backed by the copy must conform to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NSCopying&lt;/code&gt; protocol to make this work.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are some pre-ARC attributes also which we’ll discuss now, but who doesn’t use ARC today?&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;assign&lt;/strong&gt; is the default for all non pointer(*) properties i.e. the primitive C datatypes like int, float, long.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;retain&lt;/strong&gt;, it is the pre-ARC strong which owns the object by increasing its retain count, since its pre-ARC you will have to manually release the object after setting the pointer to nil.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I’ve tried to keep things short and easy to understand, if you find any issues in the post or have any feedback like adding or removing content please feel free to write in comments. I welcome tech discussions. 😉&lt;/p&gt;</content><author><name></name></author><category term="ios" /><category term="objc" /><summary type="html">Whenever we declare properties in Objective-C there are some keywords between the parentheses like strong, weak, atomic, nonatomic. There can be multiple comma separated words in between the parentheses, sometimes we don’t add any keywords there and keep the default compiler behavior. In this post we’ll discuss what these keywords/attributes actually mean and what are the effects of using one over the other. @property are specific to Objective-C but the concepts can be applied to Swift as well, if you are a Swift only dev I still recommend going through this post once.</summary></entry><entry><title type="html">A Conversation With CALayer – Meeting I</title><link href="https://vinayjain.me/posts/conversation-with-calayer" rel="alternate" type="text/html" title="A Conversation With CALayer – Meeting I" /><published>2017-03-21T10:09:25+05:30</published><updated>2017-03-21T10:09:25+05:30</updated><id>https://vinayjain.me/posts/conversation_with_calayer</id><content type="html" xml:base="https://vinayjain.me/posts/conversation-with-calayer">&lt;p&gt;If you’ve been programming for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;iOS&lt;/code&gt; devices, you might have encountered these lines of code:&lt;/p&gt;

&lt;pre class=&quot;splash&quot;&gt;&lt;code&gt;view.&lt;span class=&quot;property&quot;&gt;backgroundColor&lt;/span&gt; = [&lt;span class=&quot;type&quot;&gt;UIColor&lt;/span&gt; greenColor];
view.&lt;span class=&quot;property&quot;&gt;layer&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;cornerRadius&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;8.0&lt;/span&gt;;
view.&lt;span class=&quot;property&quot;&gt;layer&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;borderWidth&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;;
view.&lt;span class=&quot;property&quot;&gt;layer&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;borderColor&lt;/span&gt; = [&lt;span class=&quot;type&quot;&gt;UIColor&lt;/span&gt; blackColor];
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you haven’t seen code like this before try using it with any UI component in your app and check what it does. It adds a 1pt black border to the view and round its corners by 8pt.&lt;/p&gt;

&lt;p&gt;Every &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;UIView&lt;/code&gt; is backed with a layer which can be accessed with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;view.layer&lt;/code&gt;. The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;layer&lt;/code&gt; property points to an instance of either the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CALayer&lt;/code&gt; class or any of its subclasses like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CAShapeLayer&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CAGradientLayer&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CATextLayer&lt;/code&gt; etc. Layers are part of the  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Core Animation&lt;/code&gt; library and are extensively used in custom drawing with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Core Graphics&lt;/code&gt; and  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Core Animation&lt;/code&gt;, these two frameworks make &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;iOS&lt;/code&gt; apps beautiful. The image below shows where these two frameworks lie in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;iOS&lt;/code&gt; graphics drawing engine:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/drawing_hierarchy.png&quot; alt=&quot;Drawing Hierarchy&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;OpenGL&lt;/code&gt;, a low-level API which interacts directly with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GPU&lt;/code&gt;, does all the heavy lifting work of graphics processing. To make our lives even easier Apple has built &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Core Animation&lt;/code&gt;, a high-level wrapper above &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;OpenGL&lt;/code&gt; so that we don’t need to write the low-level &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;C&lt;/code&gt; code.&lt;/p&gt;

&lt;p&gt;Now, since we have been introduced to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CALayer&lt;/code&gt; and have access to the low-level graphics rendering engine lets start interacting with them and create some beautiful graphics.&lt;/p&gt;

&lt;p&gt;There are various &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CALayer&lt;/code&gt; subclasses, below are the direct &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CALayer&lt;/code&gt; subclasses available in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Core Animation&lt;/code&gt; library:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/calayer_hierarchy.png&quot; alt=&quot;CALayer Hierarchy&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In this part of the series we will build:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A loading indicator with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CAShapeLayer&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CAKeyFrameAnimation&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;A mirror reflection of the &lt;a href=&quot;https://haptik.ai&quot;&gt;Haptik&lt;/a&gt; logo with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CAReplicatorLayer&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;A colorful &lt;a href=&quot;https://haptik.ai&quot;&gt;Haptik&lt;/a&gt; logo with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CATextLayer&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;cashapelayer&quot;&gt;CAShapeLayer&lt;/h3&gt;

&lt;p&gt;With &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CAShapeLayer&lt;/code&gt; we can easily draw curved paths and geometrical shapes. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CAShapeLayer&lt;/code&gt; is mostly used in drawing custom UI components. At &lt;a href=&quot;https://haptik.ai&quot;&gt;Haptik&lt;/a&gt;, we design most of the custom &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;UIButton&lt;/code&gt; subclasses with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CAShapeLayer&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;But why would you write code to draw a circle or a triangle or anything complex when you have images?&lt;/p&gt;

&lt;div class=&quot;align-center&quot;&gt;
&lt;img src=&quot;/images/trollface.png&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;There are a few reasons to write code:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Almost all properties of shape layers are &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;animatable&lt;/code&gt;, which gives us the freedom to change these shapes with code at runtime, which we’ll learn how to do.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CAShapeLayer&lt;/code&gt; is vector based, thus they are resolution independent.&lt;/li&gt;
  &lt;li&gt;This can be drawn directly using the GPU so we can free the CPU for other tasks.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;By the end of this section, we’ll be able to show this cool animation on the screen:&lt;/p&gt;

&lt;div class=&quot;align-center&quot;&gt;
&lt;img src=&quot;/images/shape.gif&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;The animation above has three components:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;A rounded rectangle added on the view layer&lt;/li&gt;
  &lt;li&gt;A gray color circle added on the rectangle layer&lt;/li&gt;
  &lt;li&gt;A dark gray color arc added on the circle layer&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The below code draws the rounded rectangle on the screen:&lt;/p&gt;

&lt;pre class=&quot;splash&quot;&gt;&lt;code&gt;&lt;span class=&quot;type&quot;&gt;CAShapeLayer&lt;/span&gt; *roundedRect = [&lt;span class=&quot;type&quot;&gt;CAShapeLayer&lt;/span&gt; layer];
roundedRect.&lt;span class=&quot;property&quot;&gt;path&lt;/span&gt; = [&lt;span class=&quot;type&quot;&gt;UIBezierPath&lt;/span&gt; bezierPathWithRoundedRect:&lt;span class=&quot;type&quot;&gt;CGRectMake&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;120&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;120&lt;/span&gt;) cornerRadius:&lt;span class=&quot;number&quot;&gt;8.0&lt;/span&gt;].&lt;span class=&quot;type&quot;&gt;CGPath&lt;/span&gt;;
roundedRect.&lt;span class=&quot;property&quot;&gt;fillColor&lt;/span&gt; = [[&lt;span class=&quot;type&quot;&gt;UIColor&lt;/span&gt; whiteColor] colorWithAlphaComponent:&lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;].&lt;span class=&quot;type&quot;&gt;CGColor&lt;/span&gt;;
[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;view&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;layer&lt;/span&gt; addSublayer:roundedRect];
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To create the path of the shape layer we used a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;UIKit&lt;/code&gt; class &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;UIBezierPath&lt;/code&gt; to skip the complexity of drawing paths with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Core Graphics&lt;/code&gt;. The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fillColor&lt;/code&gt; property of the shape layer fills the closed region of the layer with given color.&lt;/p&gt;

&lt;p&gt;Next, we add a circle to the rounded rectangle:&lt;/p&gt;

&lt;pre class=&quot;splash&quot;&gt;&lt;code&gt;&lt;span class=&quot;type&quot;&gt;CAShapeLayer&lt;/span&gt; *circle = [&lt;span class=&quot;type&quot;&gt;CAShapeLayer&lt;/span&gt; layer];

circle.&lt;span class=&quot;property&quot;&gt;path&lt;/span&gt; = [&lt;span class=&quot;type&quot;&gt;UIBezierPath&lt;/span&gt; bezierPathWithArcCenter:&lt;span class=&quot;type&quot;&gt;CGPointMake&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) radius:&lt;span class=&quot;number&quot;&gt;50&lt;/span&gt; startAngle:&lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;*(&lt;span class=&quot;type&quot;&gt;M_PI&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;180.0&lt;/span&gt;)  endAngle:&lt;span class=&quot;number&quot;&gt;360.0&lt;/span&gt;*(&lt;span class=&quot;type&quot;&gt;M_PI&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;180.0&lt;/span&gt;) clockwise:&lt;span class=&quot;type&quot;&gt;YES&lt;/span&gt;].&lt;span class=&quot;type&quot;&gt;CGPath&lt;/span&gt;;
circle.&lt;span class=&quot;property&quot;&gt;lineWidth&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;5.0&lt;/span&gt;;
circle.&lt;span class=&quot;property&quot;&gt;fillColor&lt;/span&gt; = [&lt;span class=&quot;type&quot;&gt;UIColor&lt;/span&gt; clearColor].&lt;span class=&quot;type&quot;&gt;CGColor&lt;/span&gt;;
circle.&lt;span class=&quot;property&quot;&gt;strokeColor&lt;/span&gt; = [&lt;span class=&quot;type&quot;&gt;UIColor&lt;/span&gt; lightGrayColor].&lt;span class=&quot;type&quot;&gt;CGColor&lt;/span&gt;;
circle.&lt;span class=&quot;property&quot;&gt;backgroundColor&lt;/span&gt; = [&lt;span class=&quot;type&quot;&gt;UIColor&lt;/span&gt; clearColor].&lt;span class=&quot;type&quot;&gt;CGColor&lt;/span&gt;;
circle.&lt;span class=&quot;property&quot;&gt;position&lt;/span&gt; = &lt;span class=&quot;type&quot;&gt;CGPointMake&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;);

[roundedRect addSublayer:circle];
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For drawing a circle we need to pass a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;startAngle&lt;/code&gt; and an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;endAngle&lt;/code&gt;. With these angles, we tell the system from where the path should start and where it should be drawn till. If we were drawing this circle with a pen, consider the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;strokeColor&lt;/code&gt; as the ink color and the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lineWidth&lt;/code&gt; as the minimum width of the line that can be drawn with the pen. Changing the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;position&lt;/code&gt; of the layer centers it in the rectangle.&lt;/p&gt;

&lt;p&gt;To add the arc we will again use the same function for drawing a circle, but we will pass different start angles and end angles to draw it as an arc:&lt;/p&gt;

&lt;pre class=&quot;splash&quot;&gt;&lt;code&gt;&lt;span class=&quot;type&quot;&gt;CAShapeLayer&lt;/span&gt; *arc = [&lt;span class=&quot;type&quot;&gt;CAShapeLayer&lt;/span&gt; layer];
arc.&lt;span class=&quot;property&quot;&gt;path&lt;/span&gt; = [&lt;span class=&quot;type&quot;&gt;UIBezierPath&lt;/span&gt; bezierPathWithArcCenter:&lt;span class=&quot;type&quot;&gt;CGPointMake&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) radius:&lt;span class=&quot;number&quot;&gt;50&lt;/span&gt; startAngle:&lt;span class=&quot;number&quot;&gt;180.0&lt;/span&gt;*(&lt;span class=&quot;type&quot;&gt;M_PI&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;180.0&lt;/span&gt;)  endAngle:&lt;span class=&quot;number&quot;&gt;225.0&lt;/span&gt;*(&lt;span class=&quot;type&quot;&gt;M_PI&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;180.0&lt;/span&gt;) clockwise:&lt;span class=&quot;type&quot;&gt;YES&lt;/span&gt;].&lt;span class=&quot;type&quot;&gt;CGPath&lt;/span&gt;;
arc.&lt;span class=&quot;property&quot;&gt;lineWidth&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;5.0&lt;/span&gt;;
arc.&lt;span class=&quot;property&quot;&gt;lineCap&lt;/span&gt; = kCALineCapRound;
arc.&lt;span class=&quot;property&quot;&gt;fillColor&lt;/span&gt; = [&lt;span class=&quot;type&quot;&gt;UIColor&lt;/span&gt; clearColor].&lt;span class=&quot;type&quot;&gt;CGColor&lt;/span&gt;;
arc.&lt;span class=&quot;property&quot;&gt;strokeColor&lt;/span&gt; = [&lt;span class=&quot;type&quot;&gt;UIColor&lt;/span&gt; darkGrayColor].&lt;span class=&quot;type&quot;&gt;CGColor&lt;/span&gt;;
arc.&lt;span class=&quot;property&quot;&gt;backgroundColor&lt;/span&gt; = [&lt;span class=&quot;type&quot;&gt;UIColor&lt;/span&gt; clearColor].&lt;span class=&quot;type&quot;&gt;CGColor&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lineCap&lt;/code&gt; determines how the endpoints of the drawn curve are stroked.&lt;/p&gt;

&lt;p&gt;To create a rotational animation in x-y plane we need to change the rotation transform along the
z-axis and fortunately, we can easily do this with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Core Animation&lt;/code&gt;.&lt;/p&gt;

&lt;pre class=&quot;splash&quot;&gt;&lt;code&gt;&lt;span class=&quot;type&quot;&gt;CAKeyframeAnimation&lt;/span&gt; *animation = [&lt;span class=&quot;type&quot;&gt;CAKeyframeAnimation&lt;/span&gt; animationWithKeyPath:&lt;span class=&quot;keyword&quot;&gt;@&quot;transform&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;rotation&lt;/span&gt;.&lt;span class=&quot;string&quot;&gt;z&quot;];&lt;/span&gt;
animation.&lt;span class=&quot;property&quot;&gt;additive&lt;/span&gt; = &lt;span class=&quot;type&quot;&gt;YES&lt;/span&gt;;
animation.&lt;span class=&quot;property&quot;&gt;duration&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;10.0&lt;/span&gt;;
animation.&lt;span class=&quot;property&quot;&gt;repeatCount&lt;/span&gt; = &lt;span class=&quot;type&quot;&gt;HUGE_VALF&lt;/span&gt;;
animation.&lt;span class=&quot;property&quot;&gt;values&lt;/span&gt; = &lt;span class=&quot;keyword&quot;&gt;@&lt;/span&gt;[
                    [&lt;span class=&quot;type&quot;&gt;NSNumber&lt;/span&gt; numberWithFloat:&lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt; * &lt;span class=&quot;type&quot;&gt;M_PI&lt;/span&gt;],
                    [&lt;span class=&quot;type&quot;&gt;NSNumber&lt;/span&gt; numberWithFloat:&lt;span class=&quot;number&quot;&gt;1.75&lt;/span&gt; * &lt;span class=&quot;type&quot;&gt;M_PI&lt;/span&gt;],
                    [&lt;span class=&quot;type&quot;&gt;NSNumber&lt;/span&gt; numberWithFloat:-&lt;span class=&quot;number&quot;&gt;0.75&lt;/span&gt; * &lt;span class=&quot;type&quot;&gt;M_PI&lt;/span&gt;],
                    [&lt;span class=&quot;type&quot;&gt;NSNumber&lt;/span&gt; numberWithFloat:&lt;span class=&quot;number&quot;&gt;2.75&lt;/span&gt; * &lt;span class=&quot;type&quot;&gt;M_PI&lt;/span&gt;],
                    [&lt;span class=&quot;type&quot;&gt;NSNumber&lt;/span&gt; numberWithFloat:&lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt; * &lt;span class=&quot;type&quot;&gt;M_PI&lt;/span&gt;]
                    ];
animation.&lt;span class=&quot;property&quot;&gt;keyTimes&lt;/span&gt; = &lt;span class=&quot;keyword&quot;&gt;@&lt;/span&gt;[ &lt;span class=&quot;keyword&quot;&gt;@0&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;@&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; / &lt;span class=&quot;number&quot;&gt;6.0&lt;/span&gt;), &lt;span class=&quot;keyword&quot;&gt;@&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; / &lt;span class=&quot;number&quot;&gt;6.0&lt;/span&gt;), &lt;span class=&quot;keyword&quot;&gt;@&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt; / &lt;span class=&quot;number&quot;&gt;6.0&lt;/span&gt;), &lt;span class=&quot;keyword&quot;&gt;@1&lt;/span&gt; ];
animation.&lt;span class=&quot;property&quot;&gt;timingFunctions&lt;/span&gt; = &lt;span class=&quot;keyword&quot;&gt;@&lt;/span&gt;[
                             [&lt;span class=&quot;type&quot;&gt;CAMediaTimingFunction&lt;/span&gt; functionWithName:kCAMediaTimingFunctionEaseIn],
                             [&lt;span class=&quot;type&quot;&gt;CAMediaTimingFunction&lt;/span&gt; functionWithName:kCAMediaTimingFunctionEaseInEaseOut],
                             [&lt;span class=&quot;type&quot;&gt;CAMediaTimingFunction&lt;/span&gt; functionWithName:kCAMediaTimingFunctionEaseInEaseOut],
                             [&lt;span class=&quot;type&quot;&gt;CAMediaTimingFunction&lt;/span&gt; functionWithName:kCAMediaTimingFunctionEaseOut]
                             ];
[arc addAnimation:animation forKey:&lt;span class=&quot;string&quot;&gt;@&quot;rotate&quot;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;With &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CAKeyFrameAnimation&lt;/code&gt; we can control the animation attributes like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fromValue&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;toValue&lt;/code&gt;,  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;timingFunction&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;calculationMode&lt;/code&gt; for different time intervals in the complete animation. The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;values&lt;/code&gt; array determines &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fromValue&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;toValue&lt;/code&gt; of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;animatable&lt;/code&gt; property ( transform.rotation.z) in the time intervals given to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;keyTimes&lt;/code&gt; array. The timing functions decide how the animations start and end.&lt;/p&gt;

&lt;p&gt;You can find the complete code till this section on this &lt;a href=&quot;https://github.com/vinayjn/CALayer/tree/2521cd08e33ad6e6be3fc18d8b9995eb8bd68a87&quot;&gt;CALayers-GitHub&lt;/a&gt; repo.&lt;/p&gt;

&lt;h3 id=&quot;careplicatorlayer&quot;&gt;CAReplicatorLayer&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CAReplicatorLayer&lt;/code&gt; is a container layer, it replicates the content added to it. It has some cool properties which can be used to instruct the container how the replication has to be done. Beautiful effects can be achieved by applying animations to the replicated content. Every contained content is called an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;instance&lt;/code&gt;. To show the usage of this layer we will create a reflection of an image. By the end of this section, we’ll be able to show the reflection of the &lt;a href=&quot;https://haptik.ai&quot;&gt;Haptik&lt;/a&gt; logo like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/reflection.png&quot; alt=&quot;Reflection&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Let’s build this!&lt;/p&gt;

&lt;p&gt;First, we need a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CAReplicatorLayer&lt;/code&gt; instance and on this instance, we’ll be adding an image layer of which the reflection we will be showing:&lt;/p&gt;

&lt;pre class=&quot;splash&quot;&gt;&lt;code&gt;&lt;span class=&quot;comment&quot;&gt;// Create a CAReplicatorLayer&lt;/span&gt;
&lt;span class=&quot;type&quot;&gt;CAReplicatorLayer&lt;/span&gt; *replicatorLayer = [&lt;span class=&quot;type&quot;&gt;CAReplicatorLayer&lt;/span&gt; layer];

&lt;span class=&quot;comment&quot;&gt;// Create the image layer&lt;/span&gt;
&lt;span class=&quot;type&quot;&gt;UIImage&lt;/span&gt; *image = [&lt;span class=&quot;type&quot;&gt;UIImage&lt;/span&gt; imageNamed:&lt;span class=&quot;string&quot;&gt;@&quot;haptik_logo&quot;];&lt;/span&gt;
&lt;span class=&quot;type&quot;&gt;CALayer&lt;/span&gt; *imageLayer = [&lt;span class=&quot;type&quot;&gt;CALayer&lt;/span&gt; layer];
imageLayer.&lt;span class=&quot;property&quot;&gt;contents&lt;/span&gt; = (__bridge id)[image &lt;span class=&quot;type&quot;&gt;CGImage&lt;/span&gt;];
imageLayer.&lt;span class=&quot;property&quot;&gt;bounds&lt;/span&gt; = &lt;span class=&quot;type&quot;&gt;CGRectMake&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;, image.&lt;span class=&quot;property&quot;&gt;size&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;width&lt;/span&gt;, image.&lt;span class=&quot;property&quot;&gt;size&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;height&lt;/span&gt;);
imageLayer.&lt;span class=&quot;property&quot;&gt;anchorPoint&lt;/span&gt; = &lt;span class=&quot;type&quot;&gt;CGPointMake&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);

&lt;span class=&quot;comment&quot;&gt;// Set bounds of replicator layer
// to height twice of image height&lt;/span&gt;
replicatorLayer.&lt;span class=&quot;property&quot;&gt;bounds&lt;/span&gt; = &lt;span class=&quot;type&quot;&gt;CGRectMake&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;, image.&lt;span class=&quot;property&quot;&gt;size&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;width&lt;/span&gt;, image.&lt;span class=&quot;property&quot;&gt;size&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;height&lt;/span&gt; * &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);
replicatorLayer.&lt;span class=&quot;property&quot;&gt;masksToBounds&lt;/span&gt; = &lt;span class=&quot;type&quot;&gt;YES&lt;/span&gt;;
replicatorLayer.&lt;span class=&quot;property&quot;&gt;anchorPoint&lt;/span&gt; = &lt;span class=&quot;type&quot;&gt;CGPointMake&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;);
replicatorLayer.&lt;span class=&quot;property&quot;&gt;position&lt;/span&gt; = &lt;span class=&quot;type&quot;&gt;CGPointMake&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;view&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;frame&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;size&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;width&lt;/span&gt; / &lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;80.0&lt;/span&gt;);    
[replicatorLayer addSublayer:imageLayer];
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This code is pretty straight forward, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;anchorPoint&lt;/code&gt; of a layer is the point from where all the geometric manipulations will happen. The default &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;anchorPoint&lt;/code&gt; is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(0.5, 0.5)&lt;/code&gt; which represents the center of the layer. We want to apply a rotation from the top of the layer, so we changed it to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(0,0)&lt;/code&gt;`.&lt;/p&gt;

&lt;p&gt;With the above code, we have added an image to the replicator layer and set its correct bounds. To get the reflection we need to apply a rotation transform and translate the replicated layer to the correct position as below:&lt;/p&gt;

&lt;pre class=&quot;splash&quot;&gt;&lt;code&gt;&lt;span class=&quot;type&quot;&gt;CATransform3D&lt;/span&gt; transform = &lt;span class=&quot;type&quot;&gt;CATransform3DIdentity&lt;/span&gt;;
transform = &lt;span class=&quot;type&quot;&gt;CATransform3DScale&lt;/span&gt;(transform, &lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;, -&lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;);
transform = &lt;span class=&quot;type&quot;&gt;CATransform3DTranslate&lt;/span&gt;(transform, &lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;, -image.&lt;span class=&quot;property&quot;&gt;size&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;height&lt;/span&gt; * &lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;);
replicatorLayer.&lt;span class=&quot;property&quot;&gt;instanceTransform&lt;/span&gt; = transform;
replicatorLayer.&lt;span class=&quot;property&quot;&gt;instanceCount&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;instanceTransform&lt;/code&gt; property of the replicator layer allows us to set the calculated transform on the replicated content. There are other properties of the replicator layer like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;instanceDelay&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;instanceColor&lt;/code&gt; which can be manipulated to get more control.&lt;/p&gt;

&lt;p&gt;Setting the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;instanceCount&lt;/code&gt; to 2 instructs the replicator layer to create exactly two instances of the added content.&lt;/p&gt;

&lt;p&gt;This is it! Running this code will give us the below output:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/reflection2.png&quot; alt=&quot;Reflection&quot; /&gt;&lt;/p&gt;

&lt;p&gt;But this is not what you expected, yes because the mirror we used earlier was blurred and so was the reflection. But if that is what you also need then add a gradient layer to your layer as shown below:&lt;/p&gt;

&lt;pre class=&quot;splash&quot;&gt;&lt;code&gt;&lt;span class=&quot;type&quot;&gt;CAGradientLayer&lt;/span&gt; *gradientLayer = [&lt;span class=&quot;type&quot;&gt;CAGradientLayer&lt;/span&gt; layer];
gradientLayer.&lt;span class=&quot;property&quot;&gt;colors&lt;/span&gt; = &lt;span class=&quot;keyword&quot;&gt;@&lt;/span&gt;[
                           (__bridge id)[[[&lt;span class=&quot;type&quot;&gt;UIColor&lt;/span&gt; whiteColor] colorWithAlphaComponent:&lt;span class=&quot;number&quot;&gt;0.25&lt;/span&gt;] &lt;span class=&quot;type&quot;&gt;CGColor&lt;/span&gt;],
                           (__bridge id)[[&lt;span class=&quot;type&quot;&gt;UIColor&lt;/span&gt; whiteColor] &lt;span class=&quot;type&quot;&gt;CGColor&lt;/span&gt;]
                           ];

gradientLayer.&lt;span class=&quot;property&quot;&gt;bounds&lt;/span&gt; = &lt;span class=&quot;type&quot;&gt;CGRectMake&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;, replicatorLayer.&lt;span class=&quot;property&quot;&gt;frame&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;size&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;width&lt;/span&gt;, image.&lt;span class=&quot;property&quot;&gt;size&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;height&lt;/span&gt; + &lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;);

gradientLayer.&lt;span class=&quot;property&quot;&gt;position&lt;/span&gt; = &lt;span class=&quot;type&quot;&gt;CGPointMake&lt;/span&gt;(replicatorLayer.&lt;span class=&quot;property&quot;&gt;position&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;x&lt;/span&gt;, replicatorLayer.&lt;span class=&quot;property&quot;&gt;position&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;y&lt;/span&gt; + image.&lt;span class=&quot;property&quot;&gt;size&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;height&lt;/span&gt; * &lt;span class=&quot;number&quot;&gt;1.5&lt;/span&gt;);
&lt;span class=&quot;type&quot;&gt;CAGradientLayer&lt;/span&gt; *gradientLayer = [&lt;span class=&quot;type&quot;&gt;CAGradientLayer&lt;/span&gt; layer];
gradientLayer.&lt;span class=&quot;property&quot;&gt;colors&lt;/span&gt; = &lt;span class=&quot;keyword&quot;&gt;@&lt;/span&gt;[
                           (__bridge id)[[[&lt;span class=&quot;type&quot;&gt;UIColor&lt;/span&gt; whiteColor] colorWithAlphaComponent:&lt;span class=&quot;number&quot;&gt;0.25&lt;/span&gt;] &lt;span class=&quot;type&quot;&gt;CGColor&lt;/span&gt;],
                           (__bridge id)[[&lt;span class=&quot;type&quot;&gt;UIColor&lt;/span&gt; whiteColor] &lt;span class=&quot;type&quot;&gt;CGColor&lt;/span&gt;]
                           ];

gradientLayer.&lt;span class=&quot;property&quot;&gt;bounds&lt;/span&gt; = &lt;span class=&quot;type&quot;&gt;CGRectMake&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;, replicatorLayer.&lt;span class=&quot;property&quot;&gt;frame&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;size&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;width&lt;/span&gt;, image.&lt;span class=&quot;property&quot;&gt;size&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;height&lt;/span&gt; + &lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;);

gradientLayer.&lt;span class=&quot;property&quot;&gt;position&lt;/span&gt; = &lt;span class=&quot;type&quot;&gt;CGPointMake&lt;/span&gt;(replicatorLayer.&lt;span class=&quot;property&quot;&gt;position&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;x&lt;/span&gt;, replicatorLayer.&lt;span class=&quot;property&quot;&gt;position&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;y&lt;/span&gt; + image.&lt;span class=&quot;property&quot;&gt;size&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;height&lt;/span&gt; * &lt;span class=&quot;number&quot;&gt;1.5&lt;/span&gt;);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;At &lt;a href=&quot;https://haptik.ai&quot;&gt;Haptik&lt;/a&gt;, we have used the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CAReplicatorLayer&lt;/code&gt; to create a new typing indicator. This is how it looks!&lt;/p&gt;

&lt;div class=&quot;align-center&quot;&gt;
&lt;img src=&quot;/images/typing.gif&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;If you want to download and run this code check the &lt;a href=&quot;https://github.com/vinayjn/CALayer/tree/c495e29dc3675b39a4636f005d0d716ebd4b0fb9&quot;&gt;Github repo&lt;/a&gt;. And yes, Craig Federighi was online. ;)&lt;/p&gt;

&lt;h3 id=&quot;catextlayer&quot;&gt;CATextLayer&lt;/h3&gt;

&lt;p&gt;Text layers are used to layout and render plain and attributed strings, but we do this usually with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;UILabel&lt;/code&gt;. One amazing usage of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CATextLayer&lt;/code&gt; is to mask UIView. In this section we will redesign the &lt;a href=&quot;https://haptik.ai&quot;&gt;Haptik&lt;/a&gt; logo as in the image below:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/textlayer.png&quot; alt=&quot;CATextLayer&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We create a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;UIImageView&lt;/code&gt; with a pattern image and mask that pattern with the text layer:&lt;/p&gt;

&lt;pre class=&quot;splash&quot;&gt;&lt;code&gt;&lt;span class=&quot;comment&quot;&gt;// Create the imageView&lt;/span&gt;
&lt;span class=&quot;type&quot;&gt;UIImage&lt;/span&gt; *haptikLogo = [&lt;span class=&quot;type&quot;&gt;UIImage&lt;/span&gt; imageNamed:&lt;span class=&quot;string&quot;&gt;@&quot;Artboard&quot;];&lt;/span&gt;
&lt;span class=&quot;type&quot;&gt;UIImageView&lt;/span&gt; *imageView = [[&lt;span class=&quot;type&quot;&gt;UIImageView&lt;/span&gt; alloc] initWithFrame:&lt;span class=&quot;type&quot;&gt;CGRectMake&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;300&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;300&lt;/span&gt;)];
imageView.&lt;span class=&quot;property&quot;&gt;image&lt;/span&gt; = haptikLogo;

&lt;span class=&quot;comment&quot;&gt;// Create the CATextLayer instance.&lt;/span&gt;
&lt;span class=&quot;type&quot;&gt;CATextLayer&lt;/span&gt; *textLayer = [&lt;span class=&quot;type&quot;&gt;CATextLayer&lt;/span&gt; layer];
textLayer.&lt;span class=&quot;property&quot;&gt;frame&lt;/span&gt; = imageView.&lt;span class=&quot;property&quot;&gt;bounds&lt;/span&gt;;
textLayer.&lt;span class=&quot;property&quot;&gt;rasterizationScale&lt;/span&gt; = [&lt;span class=&quot;type&quot;&gt;UIScreen&lt;/span&gt; mainScreen].scale;
textLayer.&lt;span class=&quot;property&quot;&gt;contentsScale&lt;/span&gt; = [&lt;span class=&quot;type&quot;&gt;UIScreen&lt;/span&gt; mainScreen].scale;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Never forget&lt;/strong&gt; to set the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rasterizationScale&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;contentsScale&lt;/code&gt;, without these properties you might get blurry or smaller text depending on the screen resolution of the devices your app runs on.&lt;/p&gt;

&lt;p&gt;Set whatever string you want to display as a mask with the desired font:&lt;/p&gt;

&lt;pre class=&quot;splash&quot;&gt;&lt;code&gt;textLayer.&lt;span class=&quot;property&quot;&gt;fontSize&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;100.0&lt;/span&gt;;
textLayer.&lt;span class=&quot;property&quot;&gt;font&lt;/span&gt; = (__bridge &lt;span class=&quot;type&quot;&gt;CFTypeRef _Nullable&lt;/span&gt;)([&lt;span class=&quot;type&quot;&gt;UIFont&lt;/span&gt; systemFontOfSize:&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;]);
textLayer.&lt;span class=&quot;property&quot;&gt;string&lt;/span&gt; = &lt;span class=&quot;string&quot;&gt;@&quot;haptik&quot;;&lt;/span&gt;
textLayer.&lt;span class=&quot;property&quot;&gt;fontSize&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;100.0&lt;/span&gt;;
textLayer.&lt;span class=&quot;property&quot;&gt;font&lt;/span&gt; = (__bridge &lt;span class=&quot;type&quot;&gt;CFTypeRef _Nullable&lt;/span&gt;)([&lt;span class=&quot;type&quot;&gt;UIFont&lt;/span&gt; systemFontOfSize:&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;]);
textLayer.&lt;span class=&quot;property&quot;&gt;string&lt;/span&gt; = &lt;span class=&quot;string&quot;&gt;@&quot;haptik&quot;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Finally, use the text layer as the mask on the image view and we are done:&lt;/p&gt;

&lt;pre class=&quot;splash&quot;&gt;&lt;code&gt;imageView.&lt;span class=&quot;property&quot;&gt;layer&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;mask&lt;/span&gt; = textLayer;
imageView.&lt;span class=&quot;property&quot;&gt;layer&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;mask&lt;/span&gt; = textLayer;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Build and run the app and see how it looks like.&lt;/p&gt;

&lt;p&gt;The app source code till this section can be downloaded from &lt;a href=&quot;https://github.com/vinayjn/CALayer/tree/97ed89a9610272a9417e95fcbf7890e53f8a727d&quot;&gt;CALayer-Github&lt;/a&gt; repo. Looking forward to hearing from you all.&lt;/p&gt;

&lt;p&gt;Also, don’t forget, we are hiring high-quality engineers. So if you are interested reach out to us at &lt;a href=&quot;mailto:hello@haptik.ai&quot;&gt;hello@haptik.ai&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This post was originally written at &lt;a href=&quot;http://haptik.ai/tech/a-conversation-with-calayer-meeting-i/&quot;&gt;Haptik Tech Blog&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><category term="ios" /><category term="objc" /><summary type="html">If you’ve been programming for iOS devices, you might have encountered these lines of code:</summary></entry><entry><title type="html">Your Past Successes Guarantee…</title><link href="https://vinayjain.me/posts/your-past-successes" rel="alternate" type="text/html" title="Your Past Successes Guarantee…" /><published>2017-03-02T17:54:55+05:30</published><updated>2017-03-02T17:54:55+05:30</updated><id>https://vinayjain.me/posts/Your-Past-Successes</id><content type="html" xml:base="https://vinayjain.me/posts/your-past-successes">&lt;p&gt;It has only been three years of my professional career and so much has changed since I started. I have gained as well as lost. I had the opportunity to live in three different cities but consequently had to leave some amazing and beautiful people behind. My career demanded to switch two employers serving 1 year to each. These employers didn’t just pay me well but appreciated and recognized my work. I learnt a lot, I had great colleagues who helped and encouraged me in hard times. I made some great friends and I’ll never forget them and I hope they don’t forget me as well.&lt;/p&gt;

&lt;p&gt;I introspected the past 2-3 years several times and every time I found different results. But all these times I felt bad for doing whatever I did and whatever happened to me. I was a hard working employee, I used to take my laptop back home and spend hours figuring out work related issues in my free time at home. My efforts and dedication towards my work pushed me ahead of most of my colleagues. Soon I became a star performer. And what followed after that are all the VIP treatments given to stars. Some important one’s I would like to mention:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Flexible working hours&lt;/li&gt;
  &lt;li&gt;Merciful and tolerant mistakes&lt;/li&gt;
  &lt;li&gt;Easy leave approvals&lt;/li&gt;
  &lt;li&gt;More attention&lt;/li&gt;
  &lt;li&gt;In public appreciations&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And it came along with perks like: my leads and managers started inviting me in their parties, I was once invited for a dinner at my Team Lead’s home to eat delicious food his mother cooked. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Free home made Food&lt;/code&gt; for a bachelor in his work life is a huge prize; having those pretty girls around and clicking selfies with them, wow; I even have selfies with our CEO and CTO; our CEO never missed a chance to highlight me, after completing his All-Hands meeting he expected questions from me and whenever I was quiet, he would look at me and ask in front of everyone: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;No questions today Vinay?&lt;/code&gt;. At that moment I was representing the entire company. Everyone was so happy with my performance, work was smooth, easy and interesting. Ohh it was a great life, I was doing so well.&lt;/p&gt;

&lt;p&gt;Even after all these benefits and all my happiness, why did I leave my employers?&lt;/p&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;change-the-only-thing-constant-is-change&quot;&gt;“Change! the only thing constant is change.”&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;p&gt;I was not a star performer for ever. My happiness and my super performance continued for 7-8 months and gradually due to the monotonous tasks my work started boring me. I ignored and delayed delivering the work assigned to me. I complaint and requested to assign some interesting and challenging work to me which might make me happy and I might be able to bring the awesomeness back, but nothing happened. I became a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Reluctant Contributor&lt;/code&gt; for my company. I was no longer a star performer and its effect on me were rough and it had saddened me. All my goods were forgotten and shadowed, all my previous mistakes were enlightened. For the next months my performance was poorly rated and I was not happy with it at all.&lt;/p&gt;

&lt;p&gt;Every company has a period when they rate the yearly performance of employees. The time had come and I was expecting good performance reviews for the past year, yes because I was a star performer for a long time and I only missed 2-3 deadlines in the recent past. And to my surprise, my overall ratings were extremely low. Even lower than those who consistently performed worse than me, always. I was disappointed and from then I could not find an answer to the question &lt;strong&gt;Why did they do this to me?&lt;/strong&gt; until February 5, 2017!&lt;/p&gt;

&lt;p&gt;I heard a motivational corporate trainer say this:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;your-past-successes-guarantee-you-nothing&quot;&gt;“Your Past Successes Guarantee you Nothing!”&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;p&gt;This one single line answered all my questions and hate for employers had vanished. I realized I was the one who was not a consistent performer, my employers rated me low because I was performing low. It’s the same way I would have behaved and rated my juniors because&lt;/p&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;youre-only-as-good-as-your-last-quarter&quot;&gt;“You’re only as good as your last quarter.”&lt;/h3&gt;
&lt;/blockquote&gt;</content><author><name></name></author><summary type="html">It has only been three years of my professional career and so much has changed since I started. I have gained as well as lost. I had the opportunity to live in three different cities but consequently had to leave some amazing and beautiful people behind. My career demanded to switch two employers serving 1 year to each. These employers didn’t just pay me well but appreciated and recognized my work. I learnt a lot, I had great colleagues who helped and encouraged me in hard times. I made some great friends and I’ll never forget them and I hope they don’t forget me as well.</summary></entry></feed>